(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    299104,       5867]
NotebookOptionsPosition[    296655,       5784]
NotebookOutlinePosition[    296996,       5799]
CellTagsIndexPosition[    296953,       5796]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"1.", " ", "-", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "10."}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", "t", ")"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", "t", "]"}]}], ")"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6741078587803288`*^9, 3.6741079245110617`*^9}, {
  3.6741092456497574`*^9, 3.674109247367483*^9}, {3.674109278362778*^9, 
  3.6741092876972523`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filembe0", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mbe0.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filembe1", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mbe1.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filembe2", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mbe2.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filembe22", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mbe3.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filempe0", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mpe0.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filempe1", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mpe1.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filempe2", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mpe2.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filemt0", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mt0.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filemt1", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mt1.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "filemt2", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\results_mt2.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "errmbe", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\errors_mbe.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "errmpe", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\errors_mpe.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "errmt", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\10\\\\Program10\\\\\
Program10\\\\errors_mt.dat\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.674048761890967*^9, 3.674048790577239*^9}, {
   3.6740488668305454`*^9, 3.674048871801166*^9}, {3.6740502034877357`*^9, 
   3.674050232520577*^9}, {3.6740652972950144`*^9, 3.674065298264559*^9}, {
   3.6741077657723985`*^9, 3.6741077739788356`*^9}, {3.674107964398025*^9, 
   3.674107965367942*^9}, {3.674108039473605*^9, 3.6741080724432015`*^9}, {
   3.674109073352338*^9, 3.674109074242917*^9}, 3.674109159444768*^9, 
   3.6741091962274914`*^9, {3.6741093379305415`*^9, 3.674109382289867*^9}, {
   3.6741095282162275`*^9, 3.6741095674507046`*^9}, 3.674110531708604*^9, {
   3.6741139468320813`*^9, 3.6741140093224034`*^9}, {3.6741142216985598`*^9, 
   3.6741142400759974`*^9}, {3.67411517844563*^9, 3.6741152327975583`*^9}, {
   3.6742012245927944`*^9, 3.6742012314937296`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mbe0", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filembe0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbe1", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filembe1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbe2", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filembe2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mbe3", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filembe22", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpe0", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filempe0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpe1", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filempe1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mpe2", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filempe2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mt0", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filemt0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mt1", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filemt1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mt2", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"filemt2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"embe", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"errmbe", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"empe", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"errmpe", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"emt", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"errmt", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6740488189921284`*^9, 3.6740488516978683`*^9}, 
   3.6741090923784475`*^9, 3.6741091838211403`*^9, {3.6741095817048087`*^9, 
   3.674109627425105*^9}, 3.674110538189365*^9, 3.6741137336959624`*^9, 
   3.674113807728049*^9, {3.674114014926525*^9, 3.6741140674876027`*^9}, {
   3.6741142332084956`*^9, 3.674114285733364*^9}, {3.674114362966465*^9, 
   3.674114376514985*^9}, {3.674122584130538*^9, 3.674122602944049*^9}, {
   3.674124073856781*^9, 3.67412410174555*^9}, {3.6742012377908363`*^9, 
   3.674201243928789*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReadList", "::", "nffil"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"File not found during \
\[NoBreak]\\!\\(ReadList[\\(\\(\\\"G:\\\\\\\\Studia\\\\\\\\IV\\\\\\\\MO\\\\\\\
\\Laboratoria\\\\\\\\10\\\\\\\\Program10\\\\\\\\Program10\\\\\\\\results_mt2.\
dat\\\", \\(\\({Real, Real}\\)\\)\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nffil\\\", \
ButtonNote -> \\\"ReadList::nffil\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741241082487164`*^9, 3.67412569048557*^9, 
  3.674125962588752*^9, 3.6741271968968105`*^9, 3.674128486970065*^9, 
  3.674131377732903*^9, 3.6741332977235603`*^9, 3.6741497555002985`*^9, 
  3.6741519322410836`*^9, 3.674200811964306*^9, 3.6742010069221516`*^9, 
  3.674201248889958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Metoda bezposrednia Euler'a:\>\"", "\[IndentingNewLine]", 
 RowBox[{"dp1", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"embe", ",", "12"}], "]"}], ",", " ", "2"}], "]"}], "-", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"embe", ",", "25"}], "]"}], ",", " ", "2"}], "]"}]}], "]"}], 
    ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"embe", ",", " ", "12"}], "]"}], ",", " ", "1"}], "]"}], " ",
       "-", " ", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"embe", ",", "25"}], "]"}], ",", " ", "1"}], "]"}]}], "]"}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6741266359268847`*^9, 3.674126638644945*^9}, {
  3.6741266708360767`*^9, 3.6741267250854397`*^9}, {3.674126756003354*^9, 
  3.674126770675609*^9}, {3.674126848341317*^9, 3.674126859275844*^9}, {
  3.6741270995404716`*^9, 3.6741271274603643`*^9}}],

Cell[BoxData["\<\"Metoda bezposrednia Euler'a:\"\>"], "Output",
 CellChangeTimes->{
  3.674126719757295*^9, 3.674126771500037*^9, 3.674126865714786*^9, {
   3.674127123852451*^9, 3.6741271286570187`*^9}, 3.674127198092335*^9, 
   3.674127886263714*^9}],

Cell[BoxData["1.0008807692307695`"], "Output",
 CellChangeTimes->{
  3.674126719757295*^9, 3.674126771500037*^9, 3.674126865714786*^9, {
   3.674127123852451*^9, 3.6741271286570187`*^9}, 3.674127198092335*^9, 
   3.674127886271722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Metoda posrednia Euler'a:\>\"", "\[IndentingNewLine]", 
 RowBox[{"dp2", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"empe", ",", "12"}], "]"}], ",", " ", "2"}], "]"}], "-", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"empe", ",", "25"}], "]"}], ",", " ", "2"}], "]"}]}], "]"}], 
    ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"empe", ",", " ", "12"}], "]"}], ",", " ", "1"}], "]"}], " ",
       "-", " ", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"empe", ",", "25"}], "]"}], ",", " ", "1"}], "]"}]}], "]"}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6741268052034454`*^9, 3.674126812939441*^9}, {
  3.674126851268377*^9, 3.6741268706515017`*^9}, {3.674127144667383*^9, 
  3.6741271546596603`*^9}}],

Cell[BoxData["\<\"Metoda posrednia Euler'a:\"\>"], "Output",
 CellChangeTimes->{
  3.6741268150053325`*^9, {3.6741268643075294`*^9, 3.6741268713921185`*^9}, {
   3.674127182550414*^9, 3.6741271981263595`*^9}, 3.6741278891932993`*^9}],

Cell[BoxData["0.9991269230769231`"], "Output",
 CellChangeTimes->{
  3.6741268150053325`*^9, {3.6741268643075294`*^9, 3.6741268713921185`*^9}, {
   3.674127182550414*^9, 3.6741271981263595`*^9}, 3.6741278892028117`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Metoda posrednia trapezow:\>\"", "\[IndentingNewLine]", 
 RowBox[{"dp3", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"emt", ",", "12"}], "]"}], ",", " ", "2"}], "]"}], "-", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"emt", ",", "25"}], "]"}], ",", " ", "2"}], "]"}]}], "]"}], 
    ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"emt", ",", " ", "12"}], "]"}], ",", " ", "1"}], "]"}], " ", 
      "-", " ", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"emt", ",", "25"}], "]"}], ",", " ", "1"}], "]"}]}], "]"}], 
    ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.674127161083737*^9, 3.674127178899643*^9}}],

Cell[BoxData["\<\"Metoda posrednia trapezow:\"\>"], "Output",
 CellChangeTimes->{
  3.6741269238535028`*^9, {3.674127185180044*^9, 3.674127198159393*^9}}],

Cell[BoxData["2.0005653846153852`"], "Output",
 CellChangeTimes->{
  3.6741269238535028`*^9, {3.674127185180044*^9, 3.6741271981673985`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"embe", ",", " ", "empe", ",", " ", "emt"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<log10(dt)\>\"", ",", " ", "\"\<log10|max error|\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MBE\>\"", ",", " ", "\"\<MPE\>\"", ",", " ", "\"\<MT\>\""}],
      "}"}]}], ",", " ", 
   RowBox[{"Mesh", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6741141194531107`*^9, 3.674114195677986*^9}, {
  3.6741143418942842`*^9, 3.674114345654521*^9}, {3.6741143821355977`*^9, 
  3.67411438255814*^9}, {3.674122626398014*^9, 3.674122630757308*^9}, {
  3.6741241375971594`*^9, 3.6741241391880107`*^9}, {3.6741243379810905`*^9, 
  3.6741243390502305`*^9}, {3.674129358816984*^9, 3.674129358980787*^9}, {
  3.674131383663546*^9, 3.67413138450681*^9}, {3.674149762356494*^9, 
  3.674149767708403*^9}, {3.6741519420414577`*^9, 3.674151944651614*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
9KKX+BI9pbfQC7qV/wPSJJsm
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
          96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 
          110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 
          123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
          136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[{161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
          173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 
          186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 
          199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
          212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
          225, 226, 227, 228, 229, 230}]}}, {{
         Directive[
          PointSize[0.01388888888888889], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 
          206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 
          219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 
          230}]}, {}, {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-9., 0}, {-11.6509, 0}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"log10(dt)\"", TraditionalForm], 
       FormBox["\"log10|max error|\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-9., 0}, {-11.6509, 0}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"MBE\"", "\"MPE\"", "\"MT\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.25], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.01388888888888889`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.674127895933261*^9, {3.674128481917178*^9, 3.674128489943055*^9}, 
   3.6741293618456793`*^9, {3.674131381515546*^9, 3.6741313852142677`*^9}, 
   3.674133300440699*^9, 3.674149769144802*^9, {3.6741519354331055`*^9, 
   3.6741519460952682`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mbe0", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MBE (dt = 10e-3)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
  3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
  3.6740493982893457`*^9}, {3.6740495458190565`*^9, 3.6740495651706567`*^9}, {
  3.6740496068349075`*^9, 3.6740496132988644`*^9}, {3.67405040145147*^9, 
  3.674050423080288*^9}, {3.6740504558243546`*^9, 3.6740505841657143`*^9}, {
  3.6741079815656843`*^9, 3.674108013292635*^9}, {3.6741093006791906`*^9, 
  3.674109325704013*^9}, {3.6741096423424244`*^9, 3.674109732307515*^9}, {
  3.674109773098352*^9, 3.6741097750724573`*^9}, {3.6741101434647512`*^9, 
  3.674110144819028*^9}, {3.6741105526051617`*^9, 3.674110553574566*^9}, {
  3.674114300223989*^9, 3.674114302807938*^9}, {3.674129317124185*^9, 
  3.674129322248152*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
TfFxPfO5CqdKmjWc1DOfq/Ai/f3wc9z4f+IRaxU=
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
zxAh4UFYFPZObW4Ow07ZLlZPwv8HEL9jCQ==
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.499}, {0, 0.99994}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.499}, {0, 0.99994}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MBE (dt = 10e-3)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674109144301474*^9, 3.674109167346984*^9}, 
   3.6741092028332634`*^9, 3.674109250356888*^9, {3.6741092915388756`*^9, 
   3.674109387382038*^9}, 3.6741099393315997`*^9, 3.674113559917128*^9, 
   3.674113702246276*^9, 3.674113811305674*^9, 3.6741143248135614`*^9, 
   3.6741256939705057`*^9, 3.6741271972673635`*^9, 3.6741278938063555`*^9, 
   3.674129323326832*^9, 3.6741334206259623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mbe1", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MBE (dt = 10e-2)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "0.5"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.6741097829428215`*^9}, 3.674110140811623*^9, {
   3.6741105596771073`*^9, 3.6741105608418922`*^9}, {3.674114311615301*^9, 
   3.674114312114803*^9}, {3.674129335795931*^9, 3.6741293370180235`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdUWtIU2EYlvDXAotcqEhK1mJaP8LAypQHo9AgKVckhWLZ1R/hVOqHBqmk
UCFamKGiEjPJtOlKdGmt5kqbabl5Oerm5qVZOj1fpFt2c51z/E4/euFweM53
3uf2bU5NV5xf4+XlFc49/Pv/yZGqYyezb6CinB8jVnEpqu+1TAVKGGiDCpwJ
2mqcrEsJsUXa6XktvPe8vP19eoru1aPSOz1Ole+g/6sRlTb5VFL5GfMJ/BcN
rmjSHq6Pm6X7Lchq37EtomYOEkaljJa0wdK5qNBonJTvOb7UTKQeLJpHaFJx
p0v+AuaJ1tavUQuUXwe/PI0uz7iAWm6bUb0GW+oz7NnLUj09UmTBHWtLWewS
xgD/Z7KGECtL9d/A33T18PhGAoNLzim8RVGYQRt4gFA/3TihdWwJTSNQCILv
cMpn6ailkPzrKXfErKqvJpjM5gl7cOesM6BTQ6jfXqjPFHb56gkyeHvKPrBl
n3KT+wj1/wE/ChLvRjEEq7fQD3dOalWYndA8/fA9tBR+y0EQJwiYoJbLvBvm
CM1nQrI+YsrIEvBqScVmJM6ykYHfCM07gHjd6EzXEoEQhxnA47yZLNZNaP5B
XGquX3y0TBDM2wkaQnlHWcm6n2IfQ7Ac6Vre+YvggjDDaJNl6gN+i/0waHUN
XB/mMM8mVTMIL7l4P/2P2NcIlCajwslhN0/nGkHVA+10/IrY3yikpqYnNRwW
6okew2BKU/PEitjnGLaGHd/t5yEQ7BVY4Nz3Sh7jEfu14nJG0cdzHO7r5ceK
xh7d9nyP2Pc46mKPRZdzWIgrtSHTGrqp0SP2b8OGm/vft3NYoEuyoyLm2ulu
Dv8FJruj+g==
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
zxAh4UFYFPZObW4Ow07ZLlZPwv8HEL9jCQ==
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.49}, {0, 0.999973}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.49}, {0, 0.999973}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MBE (dt = 10e-2)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6741099781973934`*^9, 3.6741135619234066`*^9, 
  3.674113704201053*^9, 3.6741138132380285`*^9, 3.6741143225380692`*^9, 
  3.6741256963809133`*^9, 3.6741271976078973`*^9, 3.6741293379845757`*^9, 
  3.6741334244442663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mbe2", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MBE (dt = 0.2)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.674109732307515*^9}, {3.674109768285881*^9, 
   3.6741098117897453`*^9}, 3.6741101381140237`*^9, {3.674110565612648*^9, 
   3.674110567660261*^9}, 3.6741135705573654`*^9, {3.674114316302185*^9, 
   3.674114316764036*^9}, {3.6741293275149193`*^9, 3.6741293285947447`*^9}, {
   3.6742008452352705`*^9, 3.674200846764052*^9}, {3.674201282337401*^9, 
   3.6742012846898713`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQjQ5mzQSBk/YQnoADhH/TviOjhH2jsPwBYzB4bH/Q
Utmr+rEFVP6lfc2nDQHZTL4HIPo+2G+a+375sfoEB4j6zxC+f8GBNDD4Zt+d
8/z3ytu1UP0/7S23nCjb967jwNkzIPDH/k3gDrnWpskOUGc5HP6qEdO/Zs4B
iHpGB4+HVSJ64kug5jM79B/6qnHn8yqofhaHIKD21xUbHSD2sTnIt74OrPi+
Feo+DgeRde4Pf33cBbWfE2z+es0DUP9xO4DsZ+U+7AAxjwdij9AxqPv5IOI2
Jx1QwqnhDNR+CF/yznmo+YJg/cKLL0L1C4H1KcRfhrpfGGyejtzVAwAT7ayp

          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxF03k81dkbB3DUSLaYkSIJCRnJWqbSc6OSfSklISNMlixZUkgyFClLMS2G
qCQtRGizL6W49n3n3usu9LVm53eO+pnvP+f1fr3O6/N9zjnPI2nnbubAwcbG
JsPOxobXVzYCzTu2kOEWj/e5iiwCrFK+fIiWJcMRyURrxWwCrs5XpaQdI8MN
kd0mu3IISDteE14UTAZJqe3WSnkETHI3nhjpIMPTRQXt+fcE3PLqGjeOroF9
v57dvFBMwJvqnva/8mug/MTThqRSAjpk+4uDmDUgpxFjs7ucACG38U8npGrh
hvRu6cOfCbCVmo67FlALBTF1J5nVBHgZXwz/7XYtUA58zthbQ0BYwGxA0rNa
sDXt4f67loAXzfNn8pprIS2UWT5bT8B0BLvKoFIdkMhp6WEtBPC8vbrNS6cO
KkVlY+JbCRCnrhJZsq6DR4HZ+5PaCDgInGwbbtRB/4DAmwcdBMSMc5MPU+tg
7Kiv1OEeAh5LRBbXz9WBRXeXg2QvAW8N+XJsfq2HVxWJbd+Ru5+uS/CFesgT
uTQS3U+AvJWQc+q9eqB48k2GUgnQDI+zVsmsh6BzKZ27aASY5AqbFlTUg2tU
ufAAsq+AiEbzeD2EKlDYFekElJRt5uQ0aoB9OrmL0UwCmkYTZ2LsG+DAE72q
LSwC6OISw5v9G8BE40FTOjL/RalG9bQGYEWmsucOEXBqh2yKA0cjLE6JOjz6
RoCbZVrc6MZG+HXv6Q/CBHrPa9vDA3c2gr14Fdc15LS+3z3irBpBJUy/w2aE
gIk4pf3luY2w4XtZ0PAoAdb5CmIaNY0wnqjtbTZGQAVFbjZ9sBECeXZGvEG+
qyqZG72xCa7q/OHmMU7AvjpBRatLTTAlqHigcoKAJ9N8vDWxTZBlluEuMonq
leBmHnjeBK90Llj8hdzrxpEq29kE/Z2yD+aRQ3nHN49rNsO+q1X3+acI+KZK
zDkcbwbLmZZjRsgWp1htrW7NUH2eOBCJLJ8+EFeQ1Azk9jQGxzQBZJ1Gvgj2
FtisZlDZibzbvZY1L9ICnMnRfutmCHgYX1XprtICHIUn35OQz1PLQs3PtMCf
1QzxJGThkJwFifIWWNjyPNBgloCg9Ncdt7taYKhwutEbmV738h3n9xY4JmrE
nYD8XiLVZ0imFdi6W3cOItsUxA/nXW+FJe35/Z5zBHyixn6VT24FypoW2xhk
Jb6oZ/++awXvh/4JmcgcVtccQpitUHBD2H8IOXXmQpeRQRvUs7iCLecJWCfp
/aHYvg1GuXjEvZH9jnjcUwtsA9WrcqtvIuv9c9Zc9FUbuMUcLPqI/E3tZDV1
XTuQT7YECS0QcMLK/LmFXDsMCT76JodcFGIa/pXUDpTPa6r2IcfW6x567dkO
33MG++2Qd3vsyQ9oaAcLvsyhNOT9CovvjZnt8I/+uPxb5MP04rdS7B1g56+2
+hPyMVvdN58VO2DoimbsAPJ5E4vnQhEdYON71m7jIgGXeMWeDT7sAJ428UJp
5ODPPanv8zrglJ7SFyXkaNJfKbbUDlChUcZ1kF8p+d57QeqE/epL1eeRc4f+
+CfoRCfYWZ5pDkDOT1u4Y+bWCenHChLCkKskQqOnH3TCvi5V53vIDIE71w5O
dYJfeIL6R+SRqhOhG/i7wLY48lQZ8vT1TSFM6S7oucNtUIXMyf7ocrRZF5hJ
7o7tQJYefe3T+bILthdzt04hK7z08coo64JV6+wvLCKrOv3hebWjCxw7vVir
lwjQ6itylVvbDR/VFY8LItvW1Zzxtu8G3R3ZR+WQz968/aeOfzdohP2buwPZ
XffEadHYbhh4ef67CvLl4m7LosJuEJ3zE9BEfvB62JR3Uw9UBjDKjZFTzr02
7lHugW5pfbljyOnbfQyzjvSAbrGGmwXy2+T5Ixa+PeDokvLUFrk5hof0uK4H
yNJ8FHfkbsMazQv0Hkgmmfh6IVPX3t6rt9QDq277j/oiz5JubvIT7gX1Etrj
QOS174Q2iB/shaQt79dFIKfqTIsZGfdCimYkMxKft7lD6rJlL/TGmmdHIV8a
T1Hs9ugF86b7AnHIzB3KhxP/7YWmEvovSchhH4UMyGm90G4XYpWMLKU/bbqY
3Qvcuo6PHyGfOltobfOlF8Rq/NemIVelGPqIT/XCVv5HKpn4/pSV/Y04+oC/
2mhzFvLqIqHgy3x98DJ6ci4bWbOrI7J7ax9oH3KIz0N+tcH5caJJH1SOvNcp
QNZLNUwnn+oDp4w97YXINDXlzEXHPlhTPmhXjCxuNv3BJrAPuLxLTpQhR0WG
NYin90EeD9FUiaywybnNKKcPgo9YSnxF/vzMsOdyUR8cH/1oV4XM9kmI1d3c
B+3cqrVkZA/2RxxJq/ohpHPb0QZk3ugwrhr+ftBzvGfXiJwm7sy/JNIPNz9d
dGlC7turLHpaqR8UNGScW5DNfAuVt1j3gzLLb0sH8rfVj3Ybn0X7x58sYkfc
DtMM8uoHfw+P1k7k0kxD3Z7wfmiMsg/oRlZjddgm5fbDkWC98D7k2ouFjjXF
/TASyiT1I7tyPXJdquqHZ08lJrAfb3P2Oz3QD0tH8w0pyOttp6O2CAzA0V/j
amnInS4iPNpiA3CW/4L3IN5/YU+Yo9wAmBpuFKIjq0QFBLwkDQCZh0eHgWxU
wOa013MAMkLTLrNw3hdJik3gAGjpBa8awnlNWqevhg/Anxqsv7Fdhv82r0we
AId75MBh5Otia7VO1A9Adam6HoFsLCeff6l7ADYWLOZgC6vpayQyB4Ati33L
CK5H/6YilYMCcXeW6NjFlwQ3ealSoNO/wmYM54WpxMcDBcy2GeVim8QeFXyv
TwH19H94xvF8PItbw25PgRHG8wzs2VaRiVt3KBBO2PdM4DzKHveshxTgFIqQ
mcR5I6eYTS8o0Hij2wVbmCuxV6ycAsnXDo1iq+6Wqk6fpMDXDD36d5ynpX2E
zE4F3a+/S00hlxjZl47yUYEceMcS28Qx9Z2GDBWeu2/9hO0aJ59acZwK3UMa
0dM4L1lfkmlHheu8loXYsy9cE/jcqdC8oDuMHV72KvbYNSpoP8k5NIPndVwl
qD+PCgTtBgP73NLR2V/KqDA3M7FuFvcHj4/P9loqPHR0VMcukcpz8aBTwf++
fyB2j+lei8WNNNh2fsOqOeTvsqQBU2kacCtYSmDzLh50e7KTBgl+w/uwNdKN
/jY4TINDF4S9sWM57DLve9HAVKWvHTut1XHvt8s02OO0cRy74JVLxYEIGqzj
KuSeR2ZZ+nTSH9KgU/GsBvbB7Otcu8k0GPkr9Ca2ZfjN2xFtNNAquZ2M7Xk6
VrybQgOiWT4HO5EnQS10jgZX3BfbsafOZNg2yA3CKdswyQVk/j1vWDJqg8AS
kFHBlhZ453sJBuGp/hktbJOPJZGSxwehN6nwT+x0oea37iGDoOitmYBdxGzX
Lr01CMrRa9KxW4p6yML3B+HmsSt52KvPMSj5mYMg6RVah21dPi/A243+Vy3A
sYjs/YA94TRjEFR0Q/iwIzw5ZbMnBmE8JGsjdu5mAU1LHjoUBhgqYgv4bnVK
06BDgWHScWwZA7mJOW06fOmStMXWlNoRZGxMh7zPrk7YzuRdcd8d6NDSZuuP
XSqjV3zwNh207CgJ2O3zRgZ3E+kQGFD1GHuk/mgL6xkddoSEvcAWC7Ieji2i
Q9Vd7w/Yvi0eIn3DdGAzN2/BfiufLSI3SwcnUZ9u7JnASRF3TgZYipylYgdI
XxJdEGfA/T1VY9jBniGbREwYoPY2nWcJ91dZ+SZbKwY82HFVEHv1Ri6xp2cZ
wL1efQN2WEGkmHowAybalaSwI3niN5tmMeCy/d1d2NU2rZvvFjDAOe/MXmz+
LFHxni8MyPtdkIQdY5Ekfm6AAQdd1+tixz9J2xIuxATvkeaT2K3TzC21EkwQ
X//JGlvEYIfEhh1MWFOV+Cd2wthriSeHmCBqscYJOxk+SBb7MkGIXuWL3R+7
IMkVwgTj92svYaNRkDKOYoLPTZVA7NTIMqmup0xQUtALwX7RVr11ppUJ/5on
3sIeVhCQJlGZ8NnkSAy24hUz6WujTOBg9t3Gfi3TIr2emwW0KOpd7Fyv3m3K
e1lgYPhHCvZ0hZSMnw4LSgnnx9h/iDrIFB5lwYGtUanYH4sYMoauLAi4kZmO
Xcw3Luv0LwvsBG2zsA++uSA3lcMCjd6xHOwKy3m5UDILKlIt32FXPf1FPnmJ
BVaHXxdiX8m4qfFxwxAo+ceXYKvmrddp2TkEYfEny7HvV2yz57MdgsmmoC/Y
RuSX5+X8hsB9glqFzdGsHqwdPQQ8IztrsJ2ohxIvFg3BUJZ3A3bthPmHjJEh
yGWeaMHWWO3YSpUYBvZL/e3YSb/5Tm4yHQZBD7FubM6tYb+aBQ9DgxhfH/Y5
lfid118Pw7zUhwHsxgOpBgV9w3DqugINe69prtOE4Dd4WOZIx06xrQiT1/oG
78huTGyPIFpRfMo3eMSaGcaGRM45jlUE6O8aHlmu70rIuc5cNGe8ipPYmcps
I5bqI6BP3jW9/B4p+5/pRI1A51G7WWySUKCdGmME+B6MzC3fX2Wd3KEXozCe
P7OAXXhZhjB3H4PMsdlF7LHWvOy/to2DtqzP0nI/qer6XewYB+atnGVz2mZF
lzycgPbKtmUzIjc943GcBEWNoWWblSYp58t+B+tbk8v+OLP1vRvjO/Ccn122
SBOFJJk4BRtp88v2zXzyqcFsGjS0Fpd91WZ/Sr7wDIgJLC07ircl4Gn7DEhe
/uFbp1+Yx8bMgkPuT2cFKwYemQPh5h9ev+78hdq5OSgd/OEEF7uirRnz8G30
h+vvy1u/8lwA+ekfXvtlbEZDbRES535YNXHqThljETwXftj6/PxOk6QlCF78
4QeRrlFrVdhI25d+mKu3ndPlDhvp2k9rvD2eyzbJRvrw007R9Q7x5uyk1p8W
+uB650UGO4n+0wVUztKStRyksZ8umol84O3CQZr+6RK+37xlqjlIcz+93zvv
q4XcKtLCT79rP7X1Rsgq0uJPT5fzZY92riIt/b+e14VaFrtWr9jRci7Hano1
iW35G4HraV6ydi9/WfHJytKhRE/OFYtHmWR2yq1ZsbPN9MDVzv/syObnYpvE
tWJzHbXR/eZrVzxu+/nLMVHuFYv8fUGooeM/qxicsTKL5lnxHE1mmusY74rz
ZGRji7j5VjzrrpXQm/+fh2+oz+6+wr/iBgOH49Hq61asSOfa9vn+f44IeTG+
tPSf/wcX2jG2
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4.8}, {-21624.7, 19836.5}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 4.8}, {-21624.7, 19836.5}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MBE (dt = 0.2)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.674110016388385*^9, {3.674113564318221*^9, 3.674113571520344*^9}, 
   3.674113706271271*^9, 3.6741138164660344`*^9, 3.674114319534037*^9, 
   3.674125698460618*^9, 3.674127198027279*^9, 3.6741293296006436`*^9, 
   3.67413342865985*^9, {3.674200821332528*^9, 3.674200848194912*^9}, 
   3.674201011290614*^9, 3.6742012912702436`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.674126882875963*^9, 3.6741269204110966`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mbe3", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MBE (dt = 0.13)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674201304310772*^9, 3.6742013081242137`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQjQ6WFNhyXV98wP7sGRBgcYDwL9g3pC711Mz4sf+b
Rkz/oa837NsU2FXPhAhD5R/Yf/28TEn0meABiL4n9mfenTzsVKvgAFH/wr78
duszK135A/KtrwN3yL21f96j8Za3ThWq/4P9woX1Td1bFQ/skAMp+GSveVrg
+C4LFQeIeV/sre/7905/J3XgYZXIOveH3+zjHWdtzLCSgZr/w36b1waLOZbc
B4CGAU38bb/re8HJwuf8DhD7/tpPbLTZXfP6zX5jMPhvP1vhlR2DJiPUfgaH
AxeU3c7rXrMHGg60gdHhuF7gXtMNX+0h7mFy+Ko9l/+80Cv7w19BFjI7qNQb
fLhT/REeTrYNrnV/J7yzB1t/ndWhZd7ZVedDP9hD3MvmsNz+90SlTe/t3wSC
TGR36PF6xWIi+MEe4n4OhxT5lEiDj+/tIbHA5XAo8NMrGeYP9hD/cDtIz+mo
y/373l4E7EAeh2M/Zwd0MHywh/iP16Eifir31P/v7TVBxmnwOTzu2PpDBCgP
8S+/g1c8h+V7oDxEvYADxJ4P9hD/Czi85FZ8/heuXxAuDwkPBB8ABaf/cA==

          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxF03k81dkbB3DUSLaYkSIJCRnJWqbSc6OSfSklISNMlixZUkgyFClLMS2G
qCQtRGizL6W49n3n3usu9LVm53eO+pnvP+f1fr3O6/N9zjnPI2nnbubAwcbG
JsPOxobXVzYCzTu2kOEWj/e5iiwCrFK+fIiWJcMRyURrxWwCrs5XpaQdI8MN
kd0mu3IISDteE14UTAZJqe3WSnkETHI3nhjpIMPTRQXt+fcE3PLqGjeOroF9
v57dvFBMwJvqnva/8mug/MTThqRSAjpk+4uDmDUgpxFjs7ucACG38U8npGrh
hvRu6cOfCbCVmo67FlALBTF1J5nVBHgZXwz/7XYtUA58zthbQ0BYwGxA0rNa
sDXt4f67loAXzfNn8pprIS2UWT5bT8B0BLvKoFIdkMhp6WEtBPC8vbrNS6cO
KkVlY+JbCRCnrhJZsq6DR4HZ+5PaCDgInGwbbtRB/4DAmwcdBMSMc5MPU+tg
7Kiv1OEeAh5LRBbXz9WBRXeXg2QvAW8N+XJsfq2HVxWJbd+Ru5+uS/CFesgT
uTQS3U+AvJWQc+q9eqB48k2GUgnQDI+zVsmsh6BzKZ27aASY5AqbFlTUg2tU
ufAAsq+AiEbzeD2EKlDYFekElJRt5uQ0aoB9OrmL0UwCmkYTZ2LsG+DAE72q
LSwC6OISw5v9G8BE40FTOjL/RalG9bQGYEWmsucOEXBqh2yKA0cjLE6JOjz6
RoCbZVrc6MZG+HXv6Q/CBHrPa9vDA3c2gr14Fdc15LS+3z3irBpBJUy/w2aE
gIk4pf3luY2w4XtZ0PAoAdb5CmIaNY0wnqjtbTZGQAVFbjZ9sBECeXZGvEG+
qyqZG72xCa7q/OHmMU7AvjpBRatLTTAlqHigcoKAJ9N8vDWxTZBlluEuMonq
leBmHnjeBK90Llj8hdzrxpEq29kE/Z2yD+aRQ3nHN49rNsO+q1X3+acI+KZK
zDkcbwbLmZZjRsgWp1htrW7NUH2eOBCJLJ8+EFeQ1Azk9jQGxzQBZJ1Gvgj2
FtisZlDZibzbvZY1L9ICnMnRfutmCHgYX1XprtICHIUn35OQz1PLQs3PtMCf
1QzxJGThkJwFifIWWNjyPNBgloCg9Ncdt7taYKhwutEbmV738h3n9xY4JmrE
nYD8XiLVZ0imFdi6W3cOItsUxA/nXW+FJe35/Z5zBHyixn6VT24FypoW2xhk
Jb6oZ/++awXvh/4JmcgcVtccQpitUHBD2H8IOXXmQpeRQRvUs7iCLecJWCfp
/aHYvg1GuXjEvZH9jnjcUwtsA9WrcqtvIuv9c9Zc9FUbuMUcLPqI/E3tZDV1
XTuQT7YECS0QcMLK/LmFXDsMCT76JodcFGIa/pXUDpTPa6r2IcfW6x567dkO
33MG++2Qd3vsyQ9oaAcLvsyhNOT9CovvjZnt8I/+uPxb5MP04rdS7B1g56+2
+hPyMVvdN58VO2DoimbsAPJ5E4vnQhEdYON71m7jIgGXeMWeDT7sAJ428UJp
5ODPPanv8zrglJ7SFyXkaNJfKbbUDlChUcZ1kF8p+d57QeqE/epL1eeRc4f+
+CfoRCfYWZ5pDkDOT1u4Y+bWCenHChLCkKskQqOnH3TCvi5V53vIDIE71w5O
dYJfeIL6R+SRqhOhG/i7wLY48lQZ8vT1TSFM6S7oucNtUIXMyf7ocrRZF5hJ
7o7tQJYefe3T+bILthdzt04hK7z08coo64JV6+wvLCKrOv3hebWjCxw7vVir
lwjQ6itylVvbDR/VFY8LItvW1Zzxtu8G3R3ZR+WQz968/aeOfzdohP2buwPZ
XffEadHYbhh4ef67CvLl4m7LosJuEJ3zE9BEfvB62JR3Uw9UBjDKjZFTzr02
7lHugW5pfbljyOnbfQyzjvSAbrGGmwXy2+T5Ixa+PeDokvLUFrk5hof0uK4H
yNJ8FHfkbsMazQv0Hkgmmfh6IVPX3t6rt9QDq277j/oiz5JubvIT7gX1Etrj
QOS174Q2iB/shaQt79dFIKfqTIsZGfdCimYkMxKft7lD6rJlL/TGmmdHIV8a
T1Hs9ugF86b7AnHIzB3KhxP/7YWmEvovSchhH4UMyGm90G4XYpWMLKU/bbqY
3Qvcuo6PHyGfOltobfOlF8Rq/NemIVelGPqIT/XCVv5HKpn4/pSV/Y04+oC/
2mhzFvLqIqHgy3x98DJ6ci4bWbOrI7J7ax9oH3KIz0N+tcH5caJJH1SOvNcp
QNZLNUwnn+oDp4w97YXINDXlzEXHPlhTPmhXjCxuNv3BJrAPuLxLTpQhR0WG
NYin90EeD9FUiaywybnNKKcPgo9YSnxF/vzMsOdyUR8cH/1oV4XM9kmI1d3c
B+3cqrVkZA/2RxxJq/ohpHPb0QZk3ugwrhr+ftBzvGfXiJwm7sy/JNIPNz9d
dGlC7turLHpaqR8UNGScW5DNfAuVt1j3gzLLb0sH8rfVj3Ybn0X7x58sYkfc
DtMM8uoHfw+P1k7k0kxD3Z7wfmiMsg/oRlZjddgm5fbDkWC98D7k2ouFjjXF
/TASyiT1I7tyPXJdquqHZ08lJrAfb3P2Oz3QD0tH8w0pyOttp6O2CAzA0V/j
amnInS4iPNpiA3CW/4L3IN5/YU+Yo9wAmBpuFKIjq0QFBLwkDQCZh0eHgWxU
wOa013MAMkLTLrNw3hdJik3gAGjpBa8awnlNWqevhg/Anxqsv7Fdhv82r0we
AId75MBh5Otia7VO1A9Adam6HoFsLCeff6l7ADYWLOZgC6vpayQyB4Ati33L
CK5H/6YilYMCcXeW6NjFlwQ3ealSoNO/wmYM54WpxMcDBcy2GeVim8QeFXyv
TwH19H94xvF8PItbw25PgRHG8wzs2VaRiVt3KBBO2PdM4DzKHveshxTgFIqQ
mcR5I6eYTS8o0Hij2wVbmCuxV6ycAsnXDo1iq+6Wqk6fpMDXDD36d5ynpX2E
zE4F3a+/S00hlxjZl47yUYEceMcS28Qx9Z2GDBWeu2/9hO0aJ59acZwK3UMa
0dM4L1lfkmlHheu8loXYsy9cE/jcqdC8oDuMHV72KvbYNSpoP8k5NIPndVwl
qD+PCgTtBgP73NLR2V/KqDA3M7FuFvcHj4/P9loqPHR0VMcukcpz8aBTwf++
fyB2j+lei8WNNNh2fsOqOeTvsqQBU2kacCtYSmDzLh50e7KTBgl+w/uwNdKN
/jY4TINDF4S9sWM57DLve9HAVKWvHTut1XHvt8s02OO0cRy74JVLxYEIGqzj
KuSeR2ZZ+nTSH9KgU/GsBvbB7Otcu8k0GPkr9Ca2ZfjN2xFtNNAquZ2M7Xk6
VrybQgOiWT4HO5EnQS10jgZX3BfbsafOZNg2yA3CKdswyQVk/j1vWDJqg8AS
kFHBlhZ453sJBuGp/hktbJOPJZGSxwehN6nwT+x0oea37iGDoOitmYBdxGzX
Lr01CMrRa9KxW4p6yML3B+HmsSt52KvPMSj5mYMg6RVah21dPi/A243+Vy3A
sYjs/YA94TRjEFR0Q/iwIzw5ZbMnBmE8JGsjdu5mAU1LHjoUBhgqYgv4bnVK
06BDgWHScWwZA7mJOW06fOmStMXWlNoRZGxMh7zPrk7YzuRdcd8d6NDSZuuP
XSqjV3zwNh207CgJ2O3zRgZ3E+kQGFD1GHuk/mgL6xkddoSEvcAWC7Ieji2i
Q9Vd7w/Yvi0eIn3DdGAzN2/BfiufLSI3SwcnUZ9u7JnASRF3TgZYipylYgdI
XxJdEGfA/T1VY9jBniGbREwYoPY2nWcJ91dZ+SZbKwY82HFVEHv1Ri6xp2cZ
wL1efQN2WEGkmHowAybalaSwI3niN5tmMeCy/d1d2NU2rZvvFjDAOe/MXmz+
LFHxni8MyPtdkIQdY5Ekfm6AAQdd1+tixz9J2xIuxATvkeaT2K3TzC21EkwQ
X//JGlvEYIfEhh1MWFOV+Cd2wthriSeHmCBqscYJOxk+SBb7MkGIXuWL3R+7
IMkVwgTj92svYaNRkDKOYoLPTZVA7NTIMqmup0xQUtALwX7RVr11ppUJ/5on
3sIeVhCQJlGZ8NnkSAy24hUz6WujTOBg9t3Gfi3TIr2emwW0KOpd7Fyv3m3K
e1lgYPhHCvZ0hZSMnw4LSgnnx9h/iDrIFB5lwYGtUanYH4sYMoauLAi4kZmO
Xcw3Luv0LwvsBG2zsA++uSA3lcMCjd6xHOwKy3m5UDILKlIt32FXPf1FPnmJ
BVaHXxdiX8m4qfFxwxAo+ceXYKvmrddp2TkEYfEny7HvV2yz57MdgsmmoC/Y
RuSX5+X8hsB9glqFzdGsHqwdPQQ8IztrsJ2ohxIvFg3BUJZ3A3bthPmHjJEh
yGWeaMHWWO3YSpUYBvZL/e3YSb/5Tm4yHQZBD7FubM6tYb+aBQ9DgxhfH/Y5
lfid118Pw7zUhwHsxgOpBgV9w3DqugINe69prtOE4Dd4WOZIx06xrQiT1/oG
78huTGyPIFpRfMo3eMSaGcaGRM45jlUE6O8aHlmu70rIuc5cNGe8ipPYmcps
I5bqI6BP3jW9/B4p+5/pRI1A51G7WWySUKCdGmME+B6MzC3fX2Wd3KEXozCe
P7OAXXhZhjB3H4PMsdlF7LHWvOy/to2DtqzP0nI/qer6XewYB+atnGVz2mZF
lzycgPbKtmUzIjc943GcBEWNoWWblSYp58t+B+tbk8v+OLP1vRvjO/Ccn122
SBOFJJk4BRtp88v2zXzyqcFsGjS0Fpd91WZ/Sr7wDIgJLC07ircl4Gn7DEhe
/uFbp1+Yx8bMgkPuT2cFKwYemQPh5h9ev+78hdq5OSgd/OEEF7uirRnz8G30
h+vvy1u/8lwA+ekfXvtlbEZDbRES535YNXHqThljETwXftj6/PxOk6QlCF78
4QeRrlFrVdhI25d+mKu3ndPlDhvp2k9rvD2eyzbJRvrw007R9Q7x5uyk1p8W
+uB650UGO4n+0wVUztKStRyksZ8umol84O3CQZr+6RK+37xlqjlIcz+93zvv
q4XcKtLCT79rP7X1Rsgq0uJPT5fzZY92riIt/b+e14VaFrtWr9jRci7Hano1
iW35G4HraV6ydi9/WfHJytKhRE/OFYtHmWR2yq1ZsbPN9MDVzv/syObnYpvE
tWJzHbXR/eZrVzxu+/nLMVHuFYv8fUGooeM/qxicsTKL5lnxHE1mmusY74rz
ZGRji7j5VjzrrpXQm/+fh2+oz+6+wr/iBgOH49Hq61asSOfa9vn+f44IeTG+
tPSf/wcX2jG2
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 4.42}, {-8.85458, 10.7462}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 4.42}, {-8.85458, 10.7462}}, PlotRangeClipping -> True,
      PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MBE (dt = 0.13)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674203065782741*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mpe0", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MPE (dt = 10e-3)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.674109732307515*^9}, {3.674109768285881*^9, 
   3.6741098117897453`*^9}, 3.6741101381140237`*^9, {3.674110565612648*^9, 
   3.674110567660261*^9}, 3.6741135705573654`*^9, {3.674114316302185*^9, 
   3.674114316764036*^9}, {3.6741230429025555`*^9, 3.6741230520226736`*^9}, {
   3.674123140426731*^9, 3.6741231450730634`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
i4r5vBi791/P3a5iPi/GeUeXSif1+H8vOU3m
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwt13c8ld8fAHCESkZJZWVXolBGQn2QlSRSkoyvjIRUVkKlspOsEpIREsne
47m2Mq+9t+vicu09fs9Tv7+e1/v1OZ/znNfnnM95vQ7v/cc3zakoKCg2KCko
sK9V6mE65Fkxovuyi17bkgenUDAuYmZdjFhdkooQ0OXBEd90OqRKFiPHJOta
Vel4cIEavwtXdosQZvNiJ5VX3LiBwZ8qvqFFiIPgXrf+e1w4N1oHo18lhYig
ZQZzvBgnTqDZPH7VuxD5rv5F3DiFA1cXfmdK/mYhUn3ZVR0EOXDsZ2WdWgkF
yIrVAZtrguy4PB2qgDWmAuTCgZyYRHlW3EJMYIni/TzkQB7/nG0dCy7FMVlE
UCwPSVj0kH5jzYIzU6+MZtjJRa7oZa7RMrDgOhZXX3eF5yIJoWeHNG8dxhWp
GKvY4nMQLdydesXFQzgHjud5OtE5SJu9WMm1r4dwInPBghcf5SBCSQ8lvqgf
wsWEV9NR789BIn9+EKX4fhDnQTrbFC6fjQRKWt+L7mPEXSpTlX/FmI1IsHop
cKsw4lY+mmSY9WUhLrOeFaMZDDhL+Bgi6pyFlB/qXjoWSI+7Hrx1pyotEwkQ
iotWsKDDHZWuG5rjykCmHzB9ibejxTXRj2t3kNKRmxIlbdFbNDif4Z3yosJ0
5NJRKxpTHxrcht/5BC/ddETsyjW6kwnUuNIi8VZpzjRkmfTBZHyBCidm/iBn
T/4vZFBkzNDCjwr3jTEyrFHnFyKQSaPvyk+F8zGhMjB7l4qI1jTwXdWnxGnv
xY992EhBalfc7kRn7SKV6dQ1+p9SEIoMIauwjR1ESl/6x4nzKQi9qMyNe0o7
CHtq9KOih8mIhsrMT46hLWTspu0KoSsJiTjLqn/vwgbi9PXAvst5CYjIXkNj
GYNlxCqXsytUPQF5Mj17kRVZQowazyZN98cjQk8Of/UVWEJUd26ohVPHI+fT
VHi2VhYQVqNQnyXtOKSr76bTdv4cQu+UoHdtPBbxf8BYpSM6h1AE5ArGOcci
t5742XfdICOTJV21N6JjEJeaTaIrzCAOsjLMut1RiLMR4Xmd9iRiYG2QuYci
CnG/rmoQ8R8RUY58eTPj5BfEx0SmyMh+Ajm6WR5M7xCBJL+3nfKMH0fyC68d
rmAMQ2pVgqoCxEeQ7YuGLGJKgUhtFBdnzWwnUte6Y1nUHoC0We6L/eHWgXwR
v/LjKP97xN+PrSPmYDtyebHudEOJL7JvpBf3QL0FeWPXLySz+AbZN0tiuUHz
B9Fp4bX+KP8aSacboVl3q0HUzOp1hzleIXorlAvqu5WI/2j/HU1tZ4SiKiNa
gh+HCFVSZms5myM8pTodce9TkD6vk1au9wwR92UXL/1fccgfupCuZP8bCA4x
XGgjhiCalMm3vFVrilTblL6cDOVFWDaHuGZqVACnKDjoqOoPPTwFsfy2T0De
YIhavTgLxoMKGi/Ue8JnX9UkxK8WvLolJDdNvOEzldKaJ+8fOMmbHlm66gMa
QTb76DPrwDI90VKZ3x+0lDwuFOAawWni6uvTl4KAr3pgNOxaC6i885Y4sC8Y
PlNWmqjutsAx0aoJUkswjDV7dIint0K+k7xmumUorIxsDc3ub4d1mgscF0LD
QGWteYP5ayf8+eHQyGr8GeKEP4w0y3VBxPXM1xunw2HWzZOBq7sLZD6eJZYg
EaCeN2juT9cDbgICOUrTUaAbM/+xWLsP3GN9Tp3mjYMYq4hXvnJDYGl/ijLC
Kw6MHp1YcnEZAi3l6h46UhyEcX8Ics4bAt7JPQGk3G9QmHBL8rvIMJSLvVpK
00gA4wgvlwvMI5BMxdXIk5kAZrYN62S1EQhuK/4edCwRKtO66fEvR+C+84a+
/UgiJDKZ8LATR2APzrFMyjkJ3G/JfuDNGAVSEEvk9/4kkGl98MV5eBTaTLMc
WK/8gF+HQvUPHRqD+L3zpzYYkiEwSzzksO0YKN2wCSj5lgL+Jdmcydzj4DVw
/55S0y/oL3C1djQlwJmWTt3c82mAf0N1yc6HAPgqjZuCn9JA3+PgtaGfBAjQ
jRTwEkmHY159GaxLBOi65MlhtZwOmY4zixJuE5CcB2z8pzKgXlxSdOXLBLw4
t3G0Ty8DIsskKS6WTADficfMmsUZ4GF+bVt9awJs6O/uP/82E/bQ6O1pcyDC
Za/De6ezM+HPryVcexARDlE0UscTMoFBZjLgwS8i5C4qUhxVzwLpD2LHFAlE
oOw9s7p+MBviLHYDKbQn4dMPivGyrznQwzLQsnV4Ciz5i0ZcmnNARfZ6XrHQ
FMhGOQ6JU+UCzutdt4DCFAwFTvUmmOdCWNYI16LNFAg7t7X4nskD/EypVwpu
CnbmA5oVjfIgQlFFD982Bc3WVxs3P+RBlWmq4w/iFDgZl/5+tJgHu06V8o5M
04BTScJpF+ZDi1xhR8TdaQjG3S+lI+VDjZsfwc56GsxljhdXHC+Ar0rPT9O+
mAY6keA8ydcF4FegbHM/ehpuHXH7xaZWCIZLEpSMw9MwOXrjy3B7EQRq7ifS
3CWBSyLHt7YDxdAUUxcgbkkC+ocTP2oUiiEhULWO9xkJxGZf5qWmFgP1w91T
SqEkcFpLbXnuWQKaihl2xXUk2Ff0vNumqATe2s8R6bpJEP5Cech4vgQmPzTV
8xJIUEzVP6NsWAq/Jrfcfu6SgIqBfj+zJALSZX37NcVmILSpk4nGGoG40Mch
a7IzcCL429G1GATe36W0slOdgfh3x5kf0+IgyGdAqNNwBmoP5nDftsPB1Ka7
m4vPDDByjMnwqpdB6Mz46T/tM3Bn62opu3kZqB39Jlk+MAMx/WkKLO5lkJsR
2xM6MQPnYlzV9uaWgSmNzn/1azNw68Rh3RneckjNSekLZZuFKNrn3QS5ciCl
8ava8c4CYWLAYOhOOVSc1pwSOT0LzsnJpq3vy6G/xWJbVXoWIkUVnxasl0PU
skPD3tuzMHYwaSmTpQLmTr/3mLk3C2cWGJx/ilZAC072de79WSjN7n4ZbV4B
wT63hZYez8LIxaf+nvgKkNgumRDynQVBpZjv2j8qwXefiOV47iwQue2OvCiv
hC9zRX7dRbOQtHnlbVJvJRwXr3pSiEPHZ00Y7TJUgelucOaVP7Nwik/0aKpd
FRyzKd5y7UPXv03h0fWuCmjVGcUHhmYhsbtlfk9CFYzleViIjs/CySCnBv3O
Kug4b9sQPYOaotRjn1w10HixRiPbaH7vhwXx29VwaKHqdwwlGRLzTP4ztq2G
X7yCk3Y0ZDj5mEYuN6Ya6tYnyFP0qAc0Fk1paoCEDGqJcZDhRHGvCdJYA1+J
AxdBkgxjYalNUxM1EH2S49ZVaTLE27+6dJSyFv5MZP5QlSWDgDA/2yPxWtiZ
zS3hVUAdYdXM/rkWNsIzTbQ00HxHucsqGbVA6eQiQXkDzddm/Pn0Ty08uvvi
63dtdPz+TO/arVpQPlHV3a6L2nn9spPJb3igekKq+D80X6fuZ6zLb0h8TnOQ
yxTNF41ibwj5DbL9ydlO5uj4CfkV/urfIGTNMUNvRQZ+XZ9UvNAf2B9+cazZ
jgx8Esc4zy79gcEBHt/WN2RQzH4a4MhUBzW2+951e5DBRKKeolSoDmJGyMc6
vcgQI/F6XNOkDl6dif2vwI8MxyWnfz1prIOUQA1brmAyyOUo8xZM1kGkosT7
sRAyGEjGhFDS1APlEKvSt49kiJC87RwsWw8TW1QrdOFkYJVCFLKT6iGrgCvL
K5oM0rls2VsV9VC6ZDXAEkuGO1IOJ5UH6+EVM/v7L3Fk+CR1+kDHkQbIa1Mf
/pxABpYLIW2rbxqAb75aSS2FDEzSDx7IGjYC2dvhY1gOGUTyy7rfOjfCbOp2
8+9cMmhKc2rUhzRCq+hl5tU8MvhL48UM/zRClhP/umIhGeguym68vNAED/nO
+8eVkkGo4KNNzc0mSLv8XTgNIcPVi3MDTLZNMKmQZJuHI4PPxYSKmPgm2O0X
FiwqJ8OeKG+V4X3NQJRP0Q2qJgNzf/Yrz6PNcDKAm+pFDVrv4yP5pwWa4Q3j
1V6zWrTeUXLCdtAMOnmeuqf/kME9ap5pj1MzXFSO5fFuIMNO1L1ugdFmUPht
kB3XSgbluAop37lmEHItH7/Vhq4/UTh0ZrsZKniKFKnbycCRtqmZy4qH6OC0
VP0OtJ64yEpVTTxsl+q8nuhC56/cw/fzHh6CZvTVPbrJUFNr/ergQzx812r5
xNVDBl28rEz3WzwMT2aNXOslg/1Ib5pVAR5ctqLu+vWToZBwhaGpGg8pU5k3
WQbIQDWdYiXehocGh7ucX1AHLrqe2JrFwzejvcoJg2T4Rc0Z+V6gBfQOx/d/
HSYD8aSBV/qHFlB/aqEmNU4GMeHKUZaoFth9KS8Wi/qZ6BmF58ktsF7Z+YCO
QAZa6a1NhaoWeClXOtyJmv/ql6etGy0gUVFXaEwkg9V16qYL+1ph/WBpbwnq
TG2bM1+OtMIN7m/u7JNkkNeXmzATa4WPAja2TaiNrPsMVsxb4XPr9xeC02RI
eKxUqG/fCpFewfddUZPsfx5D3FvBeOHqej1qVze3Fu/IVsjlvq1tQyLD5/ec
amz4VjDiiZH9MkOG1jQDcTm5NhgQJ4tXkdH6ZWx4Fqi1gdVl54uUc2Toyvzc
JXW7Dc5RjxrKoR7IaXtxzrYNnOVTDqajnirSqD0Z0wZt0/ed38+j9ayVMzxE
3Q4t/YRNvkUyeP7uSQs42A6kOXvzm6j31TlT0R9vhxS6rOOvUTM2Zn+nlWqH
EEKhRx9qtrYzC5sP2kE1c87+3RJa3yFOb0JdOwgF0M7VLZMha7iw27SrHXoI
r63mUUuN6p0ZHmsHOTbFu0dX0P4lhOJ7t9uBQrw20gi1KomeEy/aAUTGIhIR
tdHaVnpRSAccoXUxI6ySYXg9Ys/FmA4wM7hER71GBrNNad3cnx0wJtqswIva
asdhM72qA1yMe2z0UTtSzygnrnZAfKDFQA1q/4P9PYH3OqE4+a1r4DoZLpsh
aZwPOyGe7grpB+r5vFiPJKdOcJjqXilHrWtsIYIL6oT35/YOLaLm/UV+Ta7p
BHGFyyLaG2Roo2zRdW3vhCW92vAHqL1uZwvvHe2EDpJ9ygvUpC3ndq6dTuBY
H6hOQp17jeq0pkQXPDnznnoTtWX02Ha3QhecPNxRw7iJ9tNidYv5jS7YTzgg
x4faPeKd2wurLrhAlJNTQ31tkqX5Z0wXiPwKKAlEPeR16tkBhm5QFF0vZ9ki
Q3DPfo0w9m4oSmjkEUCtLELi4RfsBj65+wriqJPb0//IXOkGLuboRi3UjgIy
XFbPu0GhNUTcF7WgM+fislc3vDWILPuEuqdup+Z1aDewbWWxxaOWt694Gp7W
Db7qbsKlqOnKNapqx7tBd9SUREZdckQ04tZiN/BT7BvZRP3k4aHHQxQ9cM7w
bNLebTK0H+xgXePogWvlK0lcqGOMjW1O3ewBmwv5geqoJbefHvYq7YGzcVJB
EagFNP36hep6gEE/TOkbaubouO9NnT3g9KC1MwX1rHyrLNt8D9w+VRpdjDrR
Q8LsJ38vqPZxl/ehZqVfzW7x6YXizMiMYztofxsyvXr2sReGHF6GcaFeSj11
lTOuF36GbZueQI2/oddvXtQL3vevZZ5H7RdSQLM+0wt2gmIiGqg32d10uXX6
4GYyL9kF9ZR1KE+lcR90+RpauqPuKv45ZWnTB2yW3g2eqLON+l9mevbBD5km
g0DUNnGXvyvn90HgKmtYPOqB05Rr1sf7YYXTNfc36noXtvKDQv0QrnuXqRF1
Yd05/xypfrCM1NVrQR326D7P7o1+uK4RXtSDWiujQi34TT/Y+Lk1TKEuk/YK
z5/oBwu51ev7dtH5e0fGrZf7wS9i9QA96q2XcJ57zwAUm10sYkItXbX2x5Nr
AGgTbWaPok7Xtt66eXsA7qw1pAqgblyqUaM1HYAPEZxbp1CTwgQ+FjwZgIRR
60vCqAUH+s/y+A9AuFdv+DnUMVZaxjPlA8Bm4opcQl3KkJoS0zwAta+0U+RR
96XvX9MZGACe6ox3V1CzrpYHFq4PAMuBGqGrqAPfSpZ7iw1ChDbrhA5q9y/s
J/i+DkJAUZHbA9Rf4dnT9pRBoDEQqHqIuniktcSnYBDkrsdR26BeE3yvS24b
hH5D64dPUOf37F4ZoBmCV3vnGpxRq54RmcqjH4J9e6taXFB3vDAIDDo8BIVl
RU1uqJd4CvqUeIdgtcYv0x212AM7xxT0XWkWscHlgxrJj+HwvDIE3G/OEH1R
a9I1lRmpD8FbX5vkd6htUoUZmfWGgN/Dg/0D6qTFsURne/R/YpspH1Fzu9/p
Uk4egoQ9xB+xqP+IfwvcTR+CC33u+7+hdpiYVStA36lb54ZN47G4plfBmaoh
ODGgtv87aqfjORGHh4ZAob2D9SdqXjyFTgNhCAKfNmuloq730DjgPTMEPvVC
Hr+wOGnUdWNjCF6Oq/WnY/FCZsPhI8Pg+JnhXg7qZ7ZGRyI5h2GRdeFxLmo+
vuSGW/zDsFNW6p6HxX0VLteKDcMb2xufCrC43hPutGvDUEi1HlyC2nm5Ydjt
9TB0PqQZrETN/4MtQspnGPiUtAuqsPNjYH5zLmAYhHEWgdVYvHKr3PTLMFwq
45asxeLBwvHqecMQ+/qYfh3qE2K+FqwzwxCcvsKBR9082sbVsjgM1DLytZhd
wng6322g603dY9eCxXfyVHf3joBQNVdpK2q3BoIggQ99p+cnX+xA3WKlNJ2l
NwI/LjZW9aBmPy7MtWE0AoeQXqVe1KZNh7TlzUegJVykHPOS+GBu/dMREKgr
zutDfXT7+ZtxvxFoy+b9MID63oc0tmMlI3AXt704jDpe4ZOGYcUIzF8/rD+C
9cei26tvv0dAuaC6FPNLPfVx0Y4RqE9m9xjF+oN3PF2NPAIDeZs7Y6jHstjV
XHhHATcfVDCB+owFpSvu1CiY1qYcIKJ2ZCWm0oqMAj1DsgFm2hc5h0NkRiHS
1nQT82kVrcEUnVFweCJ+Zgq1bZenU7/nKJAO2xiRUOf62fzg9x+F0Na3MZh3
5XT6HgaPwuK1/GHMgbE8iitfR0EU/9ZkBnWmVREDU/4oKKet686iXt2ai5ef
GoUX90Y45lDrda2zMs6Pgm5f2G3M+VlU73tXR8FR9VkAZmcrFkcnmjEYf47b
xrzReUH5J88YlG3iW+ZR72S+HD92ZwycFJ7fXURtFOB9d9xwDLY7Rb0xIw8D
GzLNxuDxj0vZmN154nKu242BzKgl/RJqqoAqz7fvx+AsWT4HM+1D+pPkijEw
nV+cWkZtoXQkovjPGHpPSjCtoK7h5mL0w48BTz75PGafDtEVgcExIL0ccMZM
p6RTrb8xBvWJ+B3MDNwRFtVi43CL6uvSKlbPjbiekAvj8JLS4tAadl7bUzRN
Lo9DUWXlWcwB/iVSW9fGYTpbwxzzwY0h2vMPxsG5Nq0JM0v7qe9RUePwmXc7
eB01c1rdx9Vv4zDndC8J80Hfxx7ayeNwSvhpCWaGS3kmNHnjsD+qmoCZNkGF
81HzOEwaS0htYPebg3mQ3B4CWJsRajGvaO53/7SfAObep3swLwmm2s4xEeCp
4vlpzPN9S9fiOQmgmBBGv4l6SsmDll6KAFVvazQw97J8c+21JMAtWaMKzD2z
KlaSjwlAnayDx9xVO6X3wZEAl46wD2JuczsvdeUNASgsODcw14+VzSVHEuDe
sX0iW9h9nz1k7tJIAJpDO+8xFwd43GprIwDJQT0cc6Gl4BWRXgIErD6Jx5zH
+YRnZIIAIkaahZjTPXZ7rlJOgKi93hjmuFtcWmwSE2Cow3x+G5svcFBLR2YC
rtLQy2LuqI/Rfi8/gfYZ8QpmOmV+HcrrEyBupX4bs52koO6k+QQEJZY6YVY8
et6gIGwC5lpyszEb3Fw0WIyaAI0RmmLMTgHZhmfjJ8Ca71IF5mTaC8ax6RMw
+MQcj5l5Vfa+7+8JOJmeQMI82qlseXdzAl6XCXDvYOf78N6HIZREWGhkO4GZ
Vav2YcNeIrzz2xTCrFGrbq3AQoSnB7ykMGfn37A9fZYIdBSlGpg9wu86rBsR
wc9hxhHz13Z2R3FzIjjF/nbBnH+oz/GRNRFcjn96hZnka/Rs+BkRJPAUvphv
uZi6/A4kQkAiXyRmgXuP3MPLibB/vKwYsy5Oq1z/NxGMnZnKMPuckKDmbCZC
A71m1d/5yBveX/uJ0MgQ3YA5y8Pnw7c1IoSyfurHrPjr29dUkUlglt2zidnh
sPeQreQkcOk472BOdLbiE5ObRPtvmHIX248r5xIzr07CBZ3AfZhbOktT88wm
4Y+J+RHMJpQ9xWURk8Cay3gWc7BFyc6b2ElIie4QxVxZFyOvlDQJonOh5zEL
fnpQWZ0zCZTXly9gnhNarqtrngQBfzVFzO63Dva2006Bvf6t25gzCxY5wxim
4GxI0B3MY1ydRnosU0DHUXMXs9pk1EgP7xTUv+Uwwsz0UnhqUG4KZj7aWGD+
+l1lfdJuCkwdqxwxX358xc7z1RR0NHA9x9wvJT/N4z8FiZP33TBzVl/sv5Mw
BSoBqW8wh4+dKavqnAJSiX4AZumfp2VMxqag7gVrEOYu+5NZW3PoesmVIZiP
7uFJEKebBvy36c+YQ3kP+8bKTQNbh2scZolJJqpLV6churQwHnNrOr1r1+1p
KPGdTsTMLE/7iOnxNBwRE0jB/MFoXetF7DQUsW5mYm6cWVDMLkTzLb7mYqZ/
QZKYbp0GYhlLIWa/yEHWu7QkYDV5i/tb7yYTplReEmhxlVZgrqYao6G8RALJ
sYZqzHusiAtJ9iQo9nWsxxwXZTW5FUCCkchDTZjl8aRBrWQSnOB+h8fsJj1f
vzZEApPU4x2Y86OXC2KOzYDBD5kezMu0G4lqmjNwkXu2H/N5252QOY8ZwHcp
DmO2bad6/bloBhjcFccw+15f2JGfnwGR8kkC5viqYbfJk7NwM19zEjNyCb8R
ZDAL1lvPpjH35OCcZYJnAe9mPYP5YGK0w7vtWfDaqJrDrPLp5ZM+SzKkZLxZ
xCx1orHfi3UOzCLvrv49L7sGb6Pd5uBt3fb63/2zYpQ9MzkHn9zmNjE/7EAW
8m/Pw0th2MbcIcx7i6FoHiwEWXYwX3n9JseEZwH+6/r+14/WCqTz3i4AYx/9
Luawx/NF9BMLQFmv89fgfE274+YiDF7y/esJ9wRCdOki6A2m/rWNfdqJc/xL
4BVf9ddz5gVm5d5LoPWk468XJsdzapaW4Mbp0b9efsS8t8FkGYznpv+6rXeW
MqJmGTx+zv911tW6LYuzK+CLLP/1je4XbJJBKzAcvvbX05ZiUnuWV8AqceOv
afxozJVNVsFXZuuvuVN6QrwbVmEXvX3/nudcY5ug82tAx7zz1/RlY0qRYWsQ
E/7P7ob+omw062BJtftvfevi7GF263BB459P5mecPDqwDm9f/bOek6j4x6sb
QB3/zxZchpO9qRsQUPzPDtV+0XzMm+DS+M8UFL0P+l9ugkffP/tfFBb7PL0J
voR/XjIQjmPX3gKNmX82dBdmicrdgssL//ymijKJh30bmpb/OYmuSzb+xTY8
XftnjeHm4cjJbfDe+Gdy3m/vkNs7sG/rn22d7TpvFu4A0/Y/z0pznGLm3gX8
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.499}, {0, 0.999927}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.499}, {0, 0.999927}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MPE (dt = 10e-3)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6741230677509995`*^9, {3.6741231501007442`*^9, 3.6741231673365097`*^9}, 
   3.674125768775834*^9, 3.674127198760975*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mpe1", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MPE (dt = 10e-2)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674123081118647*^9, 3.6741230857117825`*^9}, {
  3.674123159179302*^9, 3.6741231627523527`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdUWtIU2EYXlIohtiPQUpspjFdhRCNfqk9Xbw0EHWmJWJQw8sIykkQMUMF
W1FWho3CgiCUgSmThZaCmDovK6fM5pouXc6ypW77ytylqdHO8dufHjh8vOd8
73M78dLK/LIwDodzNPgw5/+o5mqy7Ipb8DWNyniFI9ieVUi0n+IPPjChh69c
lfS8QApPr7jssdLvrRhc0paXPlrAs2YGbeDHnPDnJXyl9zWwOfyyqswlOCXM
Gy0mRV7BvmgH3e+C8mRz5uOGH4i0tMjTIt8iSpc1rNIvU75eFNf7CnuNKzhY
0jjkEfYhubjujbljlfL3I6fWeyCj1InW4LalZQDJgnGxcMtJ9QaRkNukab7p
goiFDmJLdv/sdxfVH8ZK5/kiOdzQeYRBhRHsjYptzL/rpn7GcHGX/+rvUTfy
WUE9FsOMwgsBN/X3Hkey1ZGZAgK7giH8gBvOCi1XTKhfA7pjUrM3ygmqGHvy
CVw665D8qiXU/yQa5o+3G1QE23/BCJW1QZaiJjSPEbf3hwsMXQRnWIEp3NkU
1fsHCM03hbXEdxlJ4wSMWknjRxToanI7TITmNaErNdo9aSVg41hMuC5ZHxhb
IDT/NNTk2M6xJYI4xg7fjHgef8i/TGgfZiSJbOcULoJyFp8Qf60s78pPQvux
wFZ17+G3NQKGjauxoKjDnuBbJ7SvGaTrpNPdXgIvQ+eZAbdaFnfYT2h/s6io
2/267A8BW0+aFZ1P1RHyQKhPK2LbfAU5GwSsPeVn7FAqAhGboX7n0B5uOK0O
zhMGBnNIj30lPbQV6nsee55oXz4Pzmxcrg3RNYucwFaofxsqewNa8V8Clq7k
C7JSZyfuB+d/ExOXoA==
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.49}, {0, 0.999823}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.49}, {0, 0.999823}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MPE (dt = 10e-2)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674123087811211*^9, 3.674123170204856*^9, 
  3.674125770996457*^9, 3.6741271991423664`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mpe2", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MPE (dt = 10e-1)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6741231011811447`*^9, 3.6741231086303396`*^9}, {
  3.6741231751058083`*^9, 3.674123176233167*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjQ5mzQSBnfbe688e8/J5ag/hn7SvcGl99Szpjb0x
GFy2r2PcW/D80Duo/E37xXYnZc0mvreHmPLA/uOuuoN5N95D1T+2l9f+kdvx
8b19Ghg8s/c4GHxi6q/3UP0v7duPrsh++/e9/dkzIPDG3nT28USD/zDzPtgX
3dGUXfMfpv6j/ZR9AkX3/sPM/2yfGPw88ON/mP4v9nuUk7f+/A+z75v9S27F
53/h5v2A8yHm/YTbAzHvN5wPMe8PnA8x7x+cDw02BxgfAC3clQc=
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 2.}, {0, 1.}},
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> {{0, 2.}, {0, 1.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MPE (dt = 10e-1)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6741231105049353`*^9, 3.674123177367709*^9, 
  3.674125773121035*^9, 3.6741271994816465`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mt0", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MT (dt = 10e-3)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.674109732307515*^9}, {3.674109768285881*^9, 
   3.6741098117897453`*^9}, 3.6741101381140237`*^9, {3.674110565612648*^9, 
   3.674110567660261*^9}, 3.6741135705573654`*^9, {3.674114316302185*^9, 
   3.674114316764036*^9}, {3.6741230429025555`*^9, 3.6741230520226736`*^9}, {
   3.674123140426731*^9, 3.6741231450730634`*^9}, {3.674126031478859*^9, 
   3.674126036482863*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.007333333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
5nWSrf8PinpVSw==
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.499}, {0, 0.999934}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.499}, {0, 0.999934}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MT (dt = 10e-3)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.264], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6741260530706244`*^9, 3.6741271999931927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mt1", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MT (dt = 10e-2)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.674109732307515*^9}, {3.674109768285881*^9, 
   3.6741098117897453`*^9}, 3.6741101381140237`*^9, {3.674110565612648*^9, 
   3.674110567660261*^9}, 3.6741135705573654`*^9, {3.674114316302185*^9, 
   3.674114316764036*^9}, {3.6741230429025555`*^9, 3.6741230520226736`*^9}, {
   3.674123140426731*^9, 3.6741231450730634`*^9}, {3.674126031478859*^9, 
   3.6741260666561527`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011000000000000001`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdUVtIU2EAHkKBShKm4TSNWdQkhS5QptnntdREcz0IYmqRqRDTEGTNlyB9
yIcssgfTlTglRZgolheGJ2dppuZlm9vMS4Lmdef3spVZaecc/730weHwnXP+
73Ykt/NkWU4ikegsd/H3/1Hkobk6qyxGZeh2hiamD3u8HKqcFMn8SSPa/UpW
kttfYSMy5FLx+iR9X4sa/aY8sH4WLyt4NOCeQlkXGDVHv9egpvXClu7Od6wm
80+asd+mU7keW6TnW6FVeop9ny7BxaTOD3Npw5mIAzO6zmWq14HKJyL54aYV
BKSV6exSLTL9p0N2C1epfhc8j6QffOZtRS132qR+j15muD2/2kr9urGQFylx
cmNxTkAPVLau9bfZLPX/gB2DYulEM4seu5Rz+Ii4oPKERCtL8/ShKsm3sdyP
QCYYfkLmvi355hVC8/XjlNcLg3MOwaySF/yMeJfAhwGPCM07CEVbS3R2BcF9
Pl7+EBLEwdV1jYTm/4ImVwS/7iTY+wsjYMNVG4u9hPYZQQb7XC0aJYgVDEYR
Y16zxVsI7TeKIP/Sfp9vBLxbWtkYLKkZx1vnCe2rx5S0Zfz6MoFQx6THQoNb
h5gltL8BDJnRBq8THOXj+BlReyPl8sAmoXsYUSZzTlq0E9wVMI6i3FLRm5+E
7mOC78UxsdcvAl7NQ2PC7gPv07Hbjr3MqJ+rMkf9JvjBy9nNKIgzFh7649jP
Aq0CcobjwjxhE2hKrVi79tex5wQamPRb3RwX4pV8BVMpt0h2HPtO4vxAlrqA
40ODPCbhlhjNvNtx7D2Fm15LMVaOC3U9ppHs7p7rs+vYfxoroYw0guOCXNoM
wh8PqzI5/g9UCJYB
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.49}, {0, 0.999924}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 0.49}, {0, 0.999924}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"numerycznie MT (dt = 10e-2)\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.396], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674126067707652*^9, 3.674127200385558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"mt2", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<numerycznie MT (dt = 10e-1)\>\"", "}"}]}]}], "]"}], 
   ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", 
       RowBox[{"-", "0.5"}], ",", " ", "2"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<y(t) = 1 - exp(-10(t + ArcTan(t)))\>\"", "}"}]}], ",",
      " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6741079815656843`*^9, 
   3.674108013292635*^9}, {3.6741093006791906`*^9, 3.674109325704013*^9}, {
   3.6741096423424244`*^9, 3.674109732307515*^9}, {3.674109768285881*^9, 
   3.6741098117897453`*^9}, 3.6741101381140237`*^9, {3.674110565612648*^9, 
   3.674110567660261*^9}, 3.6741135705573654`*^9, {3.674114316302185*^9, 
   3.674114316764036*^9}, {3.6741230429025555`*^9, 3.6741230520226736`*^9}, {
   3.674123140426731*^9, 3.6741231450730634`*^9}, {3.674126031478859*^9, 
   3.674126036482863*^9}, {3.6741260763989677`*^9, 3.674126080807966*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741260831846123`*^9, 3.674127200841176*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741260831846123`*^9, 3.6741272012295275`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\($Failed\\)\[NoBreak] is not a list of \
numbers or pairs of numbers. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \\\"ListPlot::lpn\\\"]\
\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741260831846123`*^9, 3.6741272016217537`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741260831846123`*^9, 3.674127201734845*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\(ListPlot[\\(\\($Failed, \\(\\(AxesLabel \
\[Rule] \\(\\({\\\"t\\\", \\\"y\\\"}\\)\\)\\)\\), \\(\\(PlotLegends \[Rule] \
\\(\\({\\\"numerycznie MT (dt = 10e-1)\\\"}\\)\\)\\)\\)\\)\\)]\\)\\), \
\\*GraphicsBox[List[List[List[], List[], List[Directive[Opacity[1.`], \
AbsoluteThickness[1.6`], RGBColor[1, 0, 0]], LineBox[List[List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], List[Skeleton[2]], \
List[Skeleton[2]], Skeleton[456]]]]]], List[Rule[DisplayFunction, Identity], \
Rule[AspectRatio, NCache[Power[GoldenRatio, -1], 0.6180339887498948`]], \
Rule[Axes, List[True, True]], Rule[AxesLabel, List[None, None]], \
Rule[AxesOrigin, List[0, 0]], RuleDelayed[DisplayFunction, Identity], \
Rule[Frame, List[List[False, False], List[False, False]]], Rule[FrameLabel, \
List[List[None, None], List[None, None]]], Rule[FrameTicks, \
List[List[Automatic, Automatic], List[Automatic, Automatic]]], \
Rule[GridLines, List[None, None]], Rule[GridLinesStyle, \
Directive[GrayLevel[0.5`, 0.4`]]], Rule[Method, \
List[Rule[\\\"DefaultBoundaryStyle\\\", Automatic], Rule[\\\"DefaultMeshStyle\
\\\", AbsolutePointSize[6]], Rule[\\\"ScalingFunctions\\\", None]]], \
Rule[PlotRange, List[List[-0.5`, 2], List[-8.20374336378806`, \
0.9999999999999679`]]], Rule[PlotRangeClipping, True], Rule[PlotRangePadding, \
List[List[Scaled[0.02`], Scaled[0.02`]], List[Scaled[0.05`], \
Scaled[0.05`]]]], Rule[Ticks, List[Automatic, Automatic]]]]\\)\\)]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6741260831846123`*^9, 3.6741272020586863`*^9}],

Cell[BoxData[
 TemplateBox[{RowBox[{"Show", "[", 
     RowBox[{
       RowBox[{"ListPlot", "[", 
         RowBox[{"$Failed", ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"t\"", ",", "\"y\""}], "}"}]}], ",", 
           RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", "\"numerycznie MT (dt = 10e-1)\"", "}"}]}]}], "]"}],
        ",", 
       GraphicsBox[{{{}, {}, {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0]], 
           LineBox[CompressedData["
1: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
/y0VmE3v+2EXbHf++cXEdezPMPh//w+IV4pe
            "]]}}}, {
        DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
           AbsolutePointSize[6], "ScalingFunctions" -> None}, 
         PlotRange -> {{-0.5, 2}, {-8.20374336378806, 0.9999999999999679}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]}], "]"}],FormBox[
    TemplateBox[{"\"y(t) = 1 - exp(-10(t + ArcTan(t)))\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"Directive", "[", 
              RowBox[{
                RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                InterpretationBox[
                 ButtonBox[
                  TooltipBox[
                   GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                  BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                  ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                  Automatic, Method -> "Preemptive"], 
                 RGBColor[1, 0, 0], Editable -> False, Selectable -> False]}],
               "]"}], "}"}], ",", 
          RowBox[{"{", #, "}"}], ",", 
          RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
     Editable -> True], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674126084419701*^9, 3.674127202150321*^9}]
}, Open  ]]
},
WindowSize->{1247, 686},
WindowMargins->{{Automatic, 29}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 498, 13, 48, "Input"],
Cell[1059, 35, 3281, 76, 272, "Input"],
Cell[CellGroupData[{
Cell[4365, 115, 3401, 98, 504, "Input"],
Cell[7769, 215, 886, 16, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8692, 236, 1180, 31, 68, "Input"],
Cell[9875, 269, 252, 4, 31, "Output"],
Cell[10130, 275, 235, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10402, 284, 1078, 30, 68, "Input"],
Cell[11483, 316, 233, 3, 31, "Output"],
Cell[11719, 321, 219, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11975, 329, 971, 28, 68, "Input"],
Cell[12949, 359, 154, 2, 31, "Output"],
Cell[13106, 363, 141, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13284, 370, 1022, 20, 86, "Input"],
Cell[14309, 392, 20459, 396, 597, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34805, 793, 1569, 32, 86, "Input"],
Cell[36377, 827, 31540, 574, 541, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67954, 1406, 1507, 31, 86, "Input"],
Cell[69464, 1439, 24878, 466, 538, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94379, 1910, 1681, 34, 86, "Input"],
Cell[96063, 1946, 19029, 370, 474, "Output"]
}, Open  ]],
Cell[115107, 2319, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[115226, 2324, 861, 22, 86, "Input"],
Cell[116090, 2348, 18962, 369, 450, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135089, 2722, 1631, 33, 86, "Input"],
Cell[136723, 2757, 30295, 555, 510, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167055, 3317, 913, 23, 86, "Input"],
Cell[167971, 3342, 23763, 447, 506, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191771, 3794, 915, 23, 86, "Input"],
Cell[192689, 3819, 23165, 436, 515, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215891, 4260, 1679, 34, 86, "Input"],
Cell[217573, 4296, 30197, 553, 517, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247807, 4854, 1681, 34, 86, "Input"],
Cell[249491, 4890, 23709, 446, 513, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273237, 5341, 1727, 34, 86, "Input"],
Cell[274967, 5377, 476, 10, 21, "Message"],
Cell[275446, 5389, 478, 10, 21, "Message"],
Cell[275927, 5401, 478, 10, 21, "Message"],
Cell[276408, 5413, 554, 11, 21, "Message"],
Cell[276965, 5426, 2800, 42, 60, "Message"],
Cell[279768, 5470, 16871, 311, 67, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
