(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    229910,       4386]
NotebookOptionsPosition[    228480,       4334]
NotebookOutlinePosition[    228821,       4349]
CellTagsIndexPosition[    228778,       4346]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "file1", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_three0.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "file2", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_three1.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "file3", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_three2.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "file4", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_numerow0.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "file5", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_numerow1.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "file6", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\results_numerow2.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "errorthreepoints", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\errors_three.dat\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "errornumerow", " ", "=", " ", 
   "\"\<G:\\\\Studia\\\\IV\\\\MO\\\\Laboratoria\\\\9\\\\Program9\\\\Program9\\\
\\errors_numerow.dat\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.674048761890967*^9, 3.674048790577239*^9}, {
   3.6740488668305454`*^9, 3.674048871801166*^9}, {3.6740502034877357`*^9, 
   3.674050232520577*^9}, {3.6741325816410623`*^9, 3.6741326249149942`*^9}, {
   3.6741337770091586`*^9, 3.674133781391677*^9}, {3.6741418733374987`*^9, 
   3.6741418745888443`*^9}, {3.6741423981503415`*^9, 
   3.6741424103887696`*^9}, {3.674831385001647*^9, 3.6748313877039824`*^9}, {
   3.6748331282609105`*^9, 3.6748331345393305`*^9}, {3.6748339458948326`*^9, 
   3.6748339547580614`*^9}, {3.674835726181059*^9, 3.674835733725004*^9}, 
   3.6748358281186*^9, {3.6748359232962446`*^9, 3.674835933070885*^9}, {
   3.6748384823230753`*^9, 3.6748384843192034`*^9}, {3.674840179685636*^9, 
   3.6748401822360106`*^9}, {3.6748402747804794`*^9, 
   3.6748402872287707`*^9}, {3.674842141405162*^9, 3.6748421856195145`*^9}, {
   3.674844352787464*^9, 3.6748443590972047`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res1", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file1", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res2", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res3", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file3", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res4", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file4", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res5", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file5", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res6", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"file6", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorsthreepoints", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"errorthreepoints", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorsnumerow", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"errornumerow", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Real", ",", " ", "Real"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6740488189921284`*^9, 3.6740488516978683`*^9}, {
   3.674132640697462*^9, 3.6741326994516325`*^9}, {3.674142421286297*^9, 
   3.6741424540141993`*^9}, {3.6741432996186495`*^9, 3.674143300461301*^9}, {
   3.6748315037792397`*^9, 3.67483150483372*^9}, {3.6748422029281597`*^9, 
   3.67484221868616*^9}, 3.674842552529029*^9, 3.6748426086479216`*^9, {
   3.67484349084297*^9, 3.674843491689995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Dyskretyzacja trzypunktowa:\>\"", "\[IndentingNewLine]", 
 RowBox[{"dp1", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsthreepoints", ",", "1"}], "]"}], ",", " ", "2"}], 
       "]"}], "-", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsthreepoints", ",", "25"}], "]"}], ",", " ", "2"}], 
       "]"}]}], "]"}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsthreepoints", ",", " ", "1"}], "]"}], ",", " ", "1"}],
        "]"}], " ", "-", " ", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsthreepoints", ",", "25"}], "]"}], ",", " ", "1"}], 
       "]"}]}], "]"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6741266359268847`*^9, 3.674126638644945*^9}, {
  3.6741266708360767`*^9, 3.6741267250854397`*^9}, {3.674126756003354*^9, 
  3.674126770675609*^9}, {3.674126848341317*^9, 3.674126859275844*^9}, {
  3.6741270995404716`*^9, 3.6741271274603643`*^9}, {3.6748469965591626`*^9, 
  3.674847109855352*^9}}],

Cell[BoxData["\<\"Dyskretyzacja trzypunktowa:\"\>"], "Output",
 CellChangeTimes->{
  3.674126719757295*^9, 3.674126771500037*^9, 3.674126865714786*^9, {
   3.674127123852451*^9, 3.6741271286570187`*^9}, 3.674127198092335*^9, 
   3.674127886263714*^9, {3.6748470844009027`*^9, 3.6748471106941104`*^9}}],

Cell[BoxData["2.0032315293626546`"], "Output",
 CellChangeTimes->{
  3.674126719757295*^9, 3.674126771500037*^9, 3.674126865714786*^9, {
   3.674127123852451*^9, 3.6741271286570187`*^9}, 3.674127198092335*^9, 
   3.674127886263714*^9, {3.6748470844009027`*^9, 3.674847110700115*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<Dyskretyzacja Numerow'a:\>\"", "\[IndentingNewLine]", 
 RowBox[{"dp2", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsnumerow", ",", "1"}], "]"}], ",", " ", "2"}], "]"}], 
      "-", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsnumerow", ",", "5"}], "]"}], ",", " ", "2"}], "]"}]}],
      "]"}], ")"}], " ", "/", " ", 
   RowBox[{"(", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsnumerow", ",", " ", "1"}], "]"}], ",", " ", "1"}], 
       "]"}], " ", "-", " ", 
      RowBox[{"Part", "[", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"errorsnumerow", ",", "5"}], "]"}], ",", " ", "1"}], "]"}]}],
      "]"}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6741268052034454`*^9, 3.674126812939441*^9}, {
   3.674126851268377*^9, 3.6741268706515017`*^9}, {3.674127144667383*^9, 
   3.6741271546596603`*^9}, 3.6748470112720737`*^9, {3.6748471274728947`*^9, 
   3.674847201991538*^9}, {3.674847232857259*^9, 3.6748472414880486`*^9}}],

Cell[BoxData["\<\"Dyskretyzacja Numerow'a:\"\>"], "Output",
 CellChangeTimes->{
  3.6741268150053325`*^9, {3.6741268643075294`*^9, 3.6741268713921185`*^9}, {
   3.674127182550414*^9, 3.6741271981263595`*^9}, 3.6741278891932993`*^9, 
   3.674847143347012*^9, {3.674847173773311*^9, 3.6748472027690287`*^9}, 
   3.674847242281418*^9}],

Cell[BoxData["3.994871078470504`"], "Output",
 CellChangeTimes->{
  3.6741268150053325`*^9, {3.6741268643075294`*^9, 3.6741268713921185`*^9}, {
   3.674127182550414*^9, 3.6741271981263595`*^9}, 3.6741278891932993`*^9, 
   3.674847143347012*^9, {3.674847173773311*^9, 3.6748472027690287`*^9}, 
   3.6748472422874193`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"errorsthreepoints", ",", " ", "errorsnumerow"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<log10(h)\>\"", ",", " ", "\"\<log10|max error|\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Dyskretyzacja trzypunktowa\>\"", ",", " ", 
      "\"\<Dyskretyzacja Numerow'a\>\""}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "50"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1: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
ORJ23r1PZWw62rnMGu8F+IOJC79nwufhusNF8K11Zb8ve2vJfOoljRBlZ16L
8/ojfpRHSS5rNG+g79DwcJtg9VMnvqLJeDKz7fJsTd7THxZ5Ys3vE3IN/k6E
qbFtmQe+rsl7l9+mYqnHpotxQyOwjr01cJ8uPvoGiw7+Kl5nM4vqz2tS8OtN
3Kfp3vHdHljyvd3C88CvX5HDJpGuf35bIzylMqE/wV9PLq/74I5GsYL+GHVh
z7qCJly7q1HuegmNOf8syQ/vgT8+mPyoPO5/VfFA7msEa9RiS1ybjrz6GXPP
A/AR0IlTwy1KXAQR+EPwmSSItPD928zuMXfxI3y+vmD63Rw68GFbi+mPcb53
jov1vrpNRqnPmUc/0Sii/9hdbQJ8JNJZ/Z5q1F4ktjtbkp8/w3nPVmtJykMW
fZgHgvlco9vF4WiHWhQhCjov4D9jZvgZF/ar4ctn5Yq91GjEihonMzfFecB1
yv5Ko2nNRjapl9ymzTh+zmv8vFUfLpYzbTrdO9NU4w38H9xXo0I2iTRVtLca
iTLRDZxPrpcAJxZEFd+H80TvNOK0VmKHuMz1HvZlUv9fuSvalB10cdcHjUR5
LAL3N+u1VqBEeH+CwATblEWk6z9pMt9fxaZMguh+1mQcvRb8VDi0L+B/U7/G
anDdIXFMKn/F7592OaBlY1vmyb9pJGjKI/jfj4FJf4Z/d+35Lvizt09XBf/A
/Xkx+0QO3NdZg2DIgU/AfSaF/eoDev/gp0bl9t94emwq4pmvvb8d/6XRjgtR
7kY7Ycu81G/N5ck2cTnzj0Yz70wZMSypTZPmPIjV9y++/5GwjZ1L2iTCrcb/
gBdbu37jfHPcFUUno/nNv9OOWrQKZj51VJ0+nsmeY/kOS9a9oumSN9+26FeB
ET8+AjcSCZBZNi3tmC/uteg69bg17Glu+M9yiz4l3RNDp4ugXU9GWZJnxdRp
5bEyOUYNsmlIpVLzBsbSqWpXe8a/8zYJGts4tk6Tdh6/OAL3caAIvOPoFFUQ
t3uWrCsE6PSfbbVodADPR4RVcXW6gHCo/2hb1k2Amd8ls2UdKp5OjwSNItjP
PY1uLQ7UKTidsAg21b5+KXhAkE7FxIvrhfgK16lesE6+KiKjZ1PubiKS0yld
keSvHn51/YdHp8dD5p9ZncGW8TXwpXKNPTVz2bLepumS736z3fqvTuK4XHpl
053YYdtGGTohOjvbBv4iExf2dWouiDbuU0tRQEug0/VBXYpP3W7Twj8ltSQJ
dQqcsmpwpVQ2fU4KzwK8qMWWl12m4Xld/ZfrdCJd5ldHWFS8cJ2zyxLj8ycR
zMUi8XoHJNFpXL3FvdtsBH9t9atG9aT4vsIBwv+fvwKim0yX8Qme3yvQ4VjJ
3e8Df8V5AGCRVtvRwZF5khS67D8YYMk4OKXu1ossys0Jfp24bAw+lUskisJ0
GigcWE+bqkyK2ySeV6cvpWsNz5nQlrwP2EpwLOFg2C/mCaYu6xj3LcoiiK2l
06fuQy8NnuHyeVsn8deiId7KqN/snN7RKSYbZId0Ufjz4XzBfBzJhOd1OM6D
C8AL1qy73gDx1tXkYTOXhOsyf4zzKvPnOh1omKNtnSMWzT4LgpEK570QHkgJ
l0+m1kmE5XUq2fI5AYfE27a81wib4vRo8WZ7Gp1q5D/16f5dxDMpW8YcnlaX
vGGKRVOOtUxRLR3+vM6mA6/HW7JOn14n8cefYE/4f4Hx7ZNPxfvhumcGncYu
mtuyBvgU85iMOr3cjMAp0JKfI5NOZUXCDvHM78pgtpl1Snt59tMUOM8iHP4K
zPXdW5a0U1l0ye8f2CSu5bisOp1dfe5KdfAXtuvZdNk/UhbP79CScVZ2XeZp
wd/YzgO3KNqqw/uYNpX82/D+rhy6jC9thy4Xybp7SE5d2vOiNgk6XS6Xe97h
b9+evdkuUW68/x0FBz8E3xJh5V1gvl6FHEIwNXhlHp2ehF/Jn2KDRXXzhe/r
kFentXhd3c+Bvw7+OT1XPp0ON13dsOpFW9bB8+P3DTwXYi21ZD0OeBPo9ua1
uK8FM5aYUECXf+8u7qt19WGVgrrse6hgu/VfncBOT70d5Z4/YPE6j+N+Hcrw
5dPywrqMT2HfE3LBS5f5SvB7RBNpMhbFeWt1bPELnFdhhj8Dc//QH1vGpcV0
WgJzOiKrLetvxXVKAvqYDnxh/sWDPwuU0Onb6clRsn2xSJT9o5bU6e0rymWV
dkiEO8eAmZ7gfDRKOnzCyFK65JXTbZpZNsHY0qV1yWc32HS+/9KRgWV06i4K
2P1wf/8lf3oKOEVOvDH4Cyvz2ofjyurE7rkW7B3cX4VyOtWrCMaJ88HmrTzO
G/74B/jSxOZpcQV0l7fb7nPT6cwLHEB8X857VoR9Ew1Az0z6O3ttpZBKusu/
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
mSHzl4gf93Xo+2YW8NOY10us2G/J/pzm8Mff22wuXs6i5vyfIeNg8CPRnnUa
mOPpEyZ5RKNCC0P123LfLjCPIRWxZB92C/f74/zx722J51my3cPH9S0ZNwDn
YsNmy7nDVobs9x1uyTkyYJ67aWO5dUrYh4LwkInd+l1rvM+79+NNSYLzNwgB
ATD3HcI/iHGsNG0MmS8/b1JvMWgNXDWb2Khh0WZt5LUvbVz/Etdy+zRd/rjR
pgKiMQiY6/14/lMqn3/jtDNI0Pa8ZS3Zdw3M8473Tbfebah8UE1hkNoblBjh
wW7Y83V3ui/a1T7SvjP/6mDIvpXPOH8IzwcCc5zZ2qbqwsEAM08F/xDpptId
Ee+KQm53194Bp849+dQAvM9kMGdaJ9ffPbFknypwUlEAiQp7d39AmhvA1cR4
6kBT9lN3NmQ9EPab40ZgYY5vV8N5ZANmUAZutHTzs8DMI8A/l1apkf8UcMdZ
l5plwve9PW/brfRdDbqW4XrQrWM4f88NnEBD5pnXm5KfAYvy4KQOltzn0s2Q
dVa834UJEm/eDRxTBChvLFlH6w6+U2vPm8KIZ+T8rCHjHtwftuPAnAf9Y8r9
Ij0M2TfQ0JR9ucCtBfFEPLWrIxhyT0PyrJsmXQkQRA3+QRwI8P0gsWgDmNN3
ldx+lF6G3IfhID4UZg1YjL/8uWjJujHw9CI4mHPc/r3ehqxz3HfjQ2Dul9pg
E6+p6GPIen8pS85NAHPfK/5c0Kd7wLxXojD4vxh46GvIunBGi3qKgS9g7uct
ZdNUmN1o/QzqKhpaYe9FVaIJMNczEM+eSrdu+JF+rr2dbdKzY5+HOv0NqjB5
/ay+uI/RG+YdMhxY0IkDFU1ZvwGWfSHgczhWJQcYcp71iEnVRcMDcLt1GfSb
jS3qfKR237gDDVl/imXJPsaBrv+/Y5Io850GPp6+0r5sC91+1UGGzC9utOSe
DOCnBeBJ51t037P68mtgnteGv+Y+4sGG5NHgT9z3DSzoWPa97rzDEPB7UdjB
z+c8DfD17RFbCj11883Ai0qfSdnyiUnlRYP3UDw/EdjVsmSeb6j7PMGfRdvY
a2BeH1XDJrE+ocwwg9YRApG/Jol0zlpgWWcxSayHiTscWDQsvjZlvQg4r0hc
4vss2Hgk+kng31EQiD805fzeCJzfBHefmDi/zMuBOS+b0aZ5LWt4nwA7NRFR
4XzyONpI8AlR+AH/5fnTkW48BH7EvH+UIefc4Y+37xIJb4NEW0qObpbs+wTm
+jbuL+/tGe3a5y6WnCMH5vyw16attQQxMOSc1XPEG4V8SXKNAT9sGaXDIMSP
PB8N/F/9d397njOl/QROwAUZmzb92Jm96ljEF4KQw39w3x8w17VWm7L+O86Q
daFBsKdRsm1rCyzGAiostkh0254CztbkQtfuwJPOT++Sajz4xkUY+E+2nJsE
5rgf77OraJwH5n0JfU0S4xKFJhiyX3yh6cZ54Mc/+rfeG98mRKfab2AeT51p
STs4EXxlcNYmFxDP8B4cYO4HN23KwYlsQ/ZfdEZ8kvVzhY7A0Xig25b9dMBy
DseU/Z6TDRLpo1yI10S71nDg9qIAWtmS+3WAg8WgAt6fWD9TcIob/8JfMZ+c
4ubncN+5TXmKm/9rY9OIvwHpq0816NeptycOR8N5FQuSgIUV693MlnP50wzZ
H3fYjX+nufZsk02iHfcosNxTZUueOd21Z5Nd+wrM84eHLGnHgbketNvNt88w
pJ9fYdK8eYHjJwNXH3z0wWnwO94LBhxtcK7ev8FPSojAYSae97ATVQ/uNOUe
JuBRCMssy6JAcZCAvXlv5myMeIH3n80y5F6DC6acDwXmfoK87rzibEPOrcGf
ybl9Q9qpA7bb12DIvhP8vsIiwJ5jkBjL/4R4xxYLwIBfimvUF/FOckS4wFwH
ygn+WQUeeC7sySJP1BEDLZp6QzTEG3J+PYY73wEswsf9IRblFwt75hkUkHBE
lgPgR14ehDYovxiY2WvTs8p1q30F/oHH+jW6Wy+f7/KXmjZNCgGzAY4iCGQF
W9rxBeDborH4rtuvDWztN7bUD/TPgxkk0tSryoCPgvbFX2jIPq/9bv8WMMdl
8M8ie3AcOFuqmHfqw15X4QUdhqzfTLckLwAWbUSbcV/vX72T9wqwKAemGWbL
+t5iN7/1wpJ2BvhnXAQCQ0wZdwE3FQRzpy3P/RJD9gNmt+lgF1xQ4CCROIb9
FtMIr5e4+Sbw6/IDvlrFloKv07o9vV5aJMK6+cDLRFjbxJJ9hsAch4BvitdS
cRn8p0iMg7+3FOsbgPkeGRYJ+hxtOfiu+AXJbFk/AAYbclbPAH8NF41Ahty7
0dKS+z9WGDIOhD3iudkVLr8LtInHt4C5ft7OcvvK3Hx+Apua8A8yZH/fPVP2
BwNz/S6OJeuJqwyigGFxciK+nl34WbbuwPNT4cCBz3HdG5jnP2ZbFJc/KOzj
x5fJo4NfcJ4E+HcHJ0/2zabcc7Ta9S/5LRLrd9KvMeS5fe3uKwFmXnAG9vma
aDgx5H65oxaJLYlZ1xoE71EzOe4n928Cc798CVueG2DOiyAe4jmRdYbc57TA
kn4duMa0fjViNLDc/YmGtIOFYK/jNolXaL0h+zzB7/PcqzBuBjDPe4AfcX/B
etcegJ9MHIkAZ4Mh+6HBB9leA7fr0qT3IR3nXRT2gbmfeoIt+e9GQ+6VWmdS
VTHoCsz1WXwfLv8Bc14R/17aPUPmjRH/iTV9S4E5r9/LItGG/wu4jCD2y0xa
sWXKwUqb8XmH7NnSPZlFlcTAKDD3wfnAj8WY/GY33z3UnSfdgvPXHowD8R2P
fQKLtqSMB8GHU6VY+w+Y89KIZ9l+bzXoXfSJN4/8MGWef6uh5g24HrLNrdcd
d/kxsBiTSl8D8ZlwfNvc+lN7y80bGZTw4L/qm7NYxOuwtrv5CMSDso/CkHZG
7DsQ88c73HxxEzdfsCMynto18t2RtcD1VkyafhLxp7zXhsxDZLdIjAXWAOY+
vFMWcfsWMM8rxbFl/mAX4mfhYC5Zbh+lQf/ONdq/F/EX978C5wt5e/bmOIvi
FXe6Rdvt1hvGmZI/A0/JLRJGNvnGXci9Gjh5gz7NS5235P7BPYbksYhX5T41
Q9aPG9hyXgH4yU4EnriPvcQgN3BfsTD0pFuP3WvIPoIrJm0CPVu+1+Wf6W3X
brv2pIst+y32GfTWwQdpbcl+QmDex1fQkvYdmOfUt1uyn3y/yze62nKuEJjr
w39t2Y+x372P00y5v+AA7OvhBlOyjbZIdC/NAuY6Duw/rw8BPt4yRbVy+P68
34gMNV8kxlunkRs/IH5+KMYIgXnf2FzYf0EID7r5inOWrMsDyzjOlvtQgEXb
x0K8f7Yzh/D+xAJB8EPO6wBznXONKeu/h1x7NtSU+YnDhpwje2ySCPOHADOP
uGrJOivwjnhnuiUdZZFY5xVxxJB9EydN2e94xK0Pt7Apo1gECMxpVvinxXNB
iI8acs7+kkkZKH/ubsA8L/7a3e9z1M1npbDlXtdj8N+iEaihJe8dMPevaIgX
X7cacQBYrBeZ0NI/D2sQt7HHdufbgHlOOR/4+WcENsArQDeLgR8Ft+ifLfZ/
hszTwZ7MHV01cZ3/3HpjFptE+mAtsEgn9M5hyX2CwLXGVIiaEfeV5zxPGJJ3
g9/zmlLgPf1hQRCviHLp5xNufWaCO2950pB7E2EfLtQVF9Nw91Wacu8HMJ8j
2M/zH/PuzHPKILEW8u97kwoJBwcs96+6/gCY62qI7zlvc9qQcwefTRJ0YeBp
t56cwO1PAeZ5Q9wX3sN1BvxKNLR9N4nDe+D24iBttojb54C5jovPx3MMZw25
lwz+La9YJAvMcf5RNx8CLLq8k3ksEjQz7jlD7qv02XIPLzCXJcGfZF8X+PoO
BEJNLcnngXuLFzzGcu+JQR2Egxlky7gQmH9uBcSnc4flewMs3GAg7APvN7mA
eA9ePPEOU+bxLrjxMewXoug4D4C5v+6YLfcJXMT5zjz6yfThJom1BAOBec5n
jyXnDy669eJvlvzcl2Avm4sMr008rgCsiwHtY4hPJ/w+SMDHYc5SFnTrW5cR
T4pFvn1tEmWrhsDcx5naknwfWKyNjJ7ekv7iiiHnaQ/jfrQSmyvx/fecr7vi
gb8fzpB1C8eiG6/uhL674sYvoe68zlW3XgI+jmgzzgTg2A1mlk2w1iYPN6QY
sv8a9o/90DWDlofUq3gP8SbXsYF5jOaOJecdgUXY/OSNKecKrxsy7oxryXzL
dZdfwx/wXhrgkWINBeI77m+94earCrn+A1gkyYvOM+V+WWDex1HUlPO3wFz3
AD/kvbU3Ddp+NVFAO/h32X9nkCj7X69ikSj/PALmvFAJt15/y5B9NYjXC8Ft
DwLmdqkAt58HWLRVTPhryb0Utw051wD7WEAsogPmPsy0ltxHCrxpRYq/s8ta
9AJhb9w7huzHhP/nujbw6jQLnvS6j3h30paNK4BXdN3491wn158AyzjN3edx
F/ym/Ze5n8sj3hUBzF23vpDUJBF13wPmtnDcN6673QPfF+nNi6bb72fIOB7x
D6KuT/8B8/4qryn3Ntw3ZN39Me6TSADed/lZS5PGxYtdeDMwx9UDLHp4esPT
KA9wHsTiA/jTHGJ9DTD3Oz4y5V4fYJ7P2WDSEbi1l8C8Dw/3n/3LQ3z/weJC
2VRJLPIE5v0N42y5RwX4/e0+Ox8nRrwMWh36yP1+8Jc87wcszNG0hBa1EQOO
wMcHvv7y9p67v/CxIeu83Uy3v9AgWO04T3OCb233PF4IzPtHEH+LNULvgLmP
+oZJ+0eUGZ/niSHn2fuaJNoGRjxx67EJbbcv2ZB9vKNMGtIqcX7zqVvPieHO
qwA3tTwbXuUwSYSLe59G9luVwq2I8wzx94AFnR7cN+UeBeD/CgVkaQf7JPeQ
uP1X8I8f+8z5+xqYeTT4Ce9Nfm64e31MuZ8DmPMm+0x3z6Yh5xYamm4/oyHr
aPAnnOcClnGoKedhgLnv6I9Xzmu/NGRdo6Ip+5+AuQ8tGPEJrsMc4AxjRp05
ns2SdgFYrMnKVdySezJfGVRILGZNY9GWd6PvDwAeccDX5jLsC88/AvOeuVUm
WVwgdc8H7BvX0YF5vhN8mvdgAHMa+5Qp9/IAs9+Gv44pxjPf4HwkxjeK6cYn
wNxvd8ikWhSj/Z03rv1s7eaT3hoyjwl/efJ+RK9uwCtzP26+s5FJ0T7s7n8Q
mOcFEG+x33hnyP3Zmdx5NWCewy9oyn1BwJebZdr0Y6VJa85dqf76nZv/iW6T
aCPN+d6Q+74/mpT8/Y9GQ4G5zhrPcvcbwH8Kwx/NkvXKD7DfogG2EeKXDrMu
NQMW66/WbTHlHhhgUfYpUtuW8Qsw76O9YMn+io+wn2IwYZK/X9OQe8Zhnzhv
CyzGPKccskis4fV9cvldHZNEu3cHYNHOlgDx8x1cw53Aci7IlHWyz4acQ31r
yj1dwDzfCb7ZGvR9NjDPOT6yZJwEzHt3Ay0S9CHdF4NEG1GhWu68BLAo406E
ff4aISYjDXdOzZJ+8ivOs2j46WDK+AZYrCk+gfiX5/KBeW/9ZUv2gwF/LVa4
ztkvJs3fdit91m+IZ7gg6fqrb24+sQrul1gXD8x7aHD/eK/xd7ee0M+WfcDf
3fzpNHd+H5jzCFdN2Q8O/HVA8Kcnw8D3RILmh0HCre0sZ9PsBmeiDgYWXzeg
iSn7CoDlPkaLLqbAG/3p9rPg+/MeZOAvn5abCcAvZF8w7Nu1+bV08CNu1wVO
IhocJ4PfiUbvXwaJU9r5gUn1fqQ9NwQ4WCS8n5uyjwX49jWxsMCmaTusuQl/
+/P77j4iYJ6/SunIfV+/3X6hrPBfoDMfgU/k/Rg7+gJ33vuPW68pY8r6K7Bo
c1rd3ZR5EmCegztjkqiiJ/hrkKD9RQeaJMa0G/x1+xMQ3/Jel79uvGhY1JUT
guDPuz/Wmp/IooltihzN+c+QvGmKKfdN/3Pt20JT+jNg3vOy3CS/XsQWscb0
VhD59SIkLzeVXgT3pYQ5Si+C93EN9im9CO7f6R2u9CJ4b1i5CKUXIeeUUym9
CE5fdEyl9CK47SB3aqUXwXxiVCqlF8H9LWdTKb0InheNnVrpRfAccaFUSi+C
f87WCKUXIaZTn99IpfQi5Px6hNKL4P0JSVIrvQjONydOpfQi5P6FCKUXUVk0
eG2KUHoR3Mf0PULpRZhiYPhNKqUXwX0aGyKUXgT7w1SplF6E9DPhSi+C5/Va
hCu9CN67fj9c6UVw/8O3cKUXwXuNZ0QovQguL/yLUHoRnNfJlErpRfC+0x0R
Si+C9wv8DVd6EQlFwnxIhNKL4H0CrSKUXoT/7/v1Ijyi4HwtXOlF8DjwyHCl
F8H9u0silF5EHfE61oYrvQh+HxfDlV6E7E9PpfQieN5mRLjSi5D5sHClFyH3
RYQrvQjZPx+h9CK4nr0wXOlF8DxQjXClF8H9ok3DlV7EsvIFjUZLfEovguf1
m4UrvQiuH7eMUHoRst/Tp/QieF46X7jSi+D5jws+pRch65fhSi9C5qN9Si+C
n2//cKUXIeuX4UovQqSDP06MUHoRvI+iRITSi+B59YYRSi+C82xZwpVeBNdZ
a4crvQiel0kRrvQixJokq5ZP6UVwXAHs14tgvjc3QulFyLylT+lFsD3IHa70
IsQ0TSEtXOlFSJ4YrvQieF9UzHClF8H71fF+/HoRcv+MT+lFyPvrU3oRPAe+
J1zpRfD3/RSu9CK4XnTHUXoRzJvG+pReBO+xuxKu9CI4X3jXp/QiuG8oYbjS
i+C490O40ovIKBzcFZ/Si5D9Qz6lF8F9ewt9Si9C7qGMUHoRbF8uhCu9CO5L
7OtTehG8T+OlT+lFtBIFkGY+pRfB+zLm+ZReBM+D4vf79SKaiw/U3Kf0IphP
vvApvQjZnxGu9CJyc6LDp/Qi5J5xn9KL4H0qp3xKL4Lzj+t8Si+C7WSZcKUX
IffkOkovguefOviUXgSvK6ntU3oR7H/j+5ReBNvvXj6lFyG8VUsKV3oRbNbW
OEovguOiQ47Si5B9iOFKL0LugfcpvQi5H8Sn9CI6iH9QyKf0Ivh7BvuUXoRw
Ty+6+ZRehMzLhiu9iDiioXeMT+lFcP1rQLjSi+Dzg/vg14tgPYN/PqUXIed7
IpReRHluaPQpvYi8opEJ9sKvF8F7fU76lF4Ez28nCVd6EbKPyKf0IsS6tJef
HKUXwfnu/Y7Si5D728KVXgTbv5g+pRchvu7sluFKL4KvV1Of0ovg83POp/Qi
WA/ohk/pRWyq2GZ2j7yO0ouQ/VDhSi+C5522+JReBPP9zI7Si+B8bjWf0ovg
c/LQUXoRvD6psqP0IrifpIKj9CKY593yKb0I7qfCeffrRfB98YUrvQjJN8KV
XgTr91RylF4Ez5Xg+/r1Ivj5OT6lF8F73K/5lF4E97/s8Sm9CN6DlttRehFc
D1ofrvQiOE4b51N6EZw/uOQovQjJXxylFyHnp8KVXgQ/r22O0ovguGRruNKL
4D3b+Px+vQieTzd9Si9CjFuUmucovQixBvntTUfpRUi+5VN6EewvkviUXgTP
jex0lF4E79M85Si9CLY/sMd+vQipA+BTehG8FyehT+lFMD374ii9CN63eMan
9CKk3/YpvQg5X+kovQi2HwN9Si+C6zI5HaUXIffl+JRehOwX9ym9iFSCWP7n
KL0ItrvtHaUXwfs/4C/9ehE8x1bXUXoRnC8s61N6EVx/T+wovQg+j+dspRfB
3/+ro/QieI/OA5/Si+D3k89RehG8n2u+o/QieP9+QUfpRcjz4VN6ERx+4n77
9SJYX+OHo/Qi2P7AHvv1IsLEX1jvKL0I5hmwF369CP8+G79ehNyD7IvUixAG
Y59P6UVw30ugo/QipL6Co/QimgkCF9tRehGSLzpKL2IywvufQY7Si+D+/H4+
pRch+aij9CJkHOMovQg5p+pTehHiOmyo6ii9CO4fKewovQjuZ+7iU3oR0r47
Si+C79sVR+lFiOvd+7JP6UUw/03rU3oR3J8Fe+jXi+D+jAY+pRfB/cxfbaUX
wf3XV31KL4LnXtc5Si+C+3Ee2kovQurBOEovQrSdj0vkU3oRct7ap/Qi5B6q
cKUXwXkP2Bu/XgTPf+G8+vUi+LwhHvbrRTDP2ewovQjuc3/jU3oRbM/x5369
CJ6faeMovQg53+VTehHM7+Y4Si+Cz+FCR+lFcFyw0FZ6Ebx/0eNTehH8PAr7
lF4E6xeU9Cm9CK5nwr/79SI4bznMUXoRsr8hXOlFsDvGefLrRTwUx7eTo/Qi
mH9ZPqUXwfEA+LVfL4L5QRmf0ovg51nT+X+9CDxvv16EIRb4fbGVXgTXH787
Si9C7tHzKb0I3ifw2VZ6EayX0MtRehGsl4R4xK8XwbwV/t+vF8Hx4wJH6UXw
78d59utF8HxCiKP0Inhe6aKt9CL4HH5zlF4Ezy8FO0ovgvdB4jz79SK4X6GD
o/QiOD9w3lF6EbLf0FF6Edxve8VWehFyP4+j9CKYVxS0lV4E97d1dJReBNfd
YC/8ehF83lY5Si+C99Q8cJReBJ9P2Au/XgTns2L5lF4E9w1vspVeBPdlwJ/6
9SI43m/lKL0IyY9spRfB8fUqW+lFyH22PqUXseh7pqfrj9pKL0I+V1vpRfD9
228rvQg5n+govQiOz87aSi/i/v7guVka20ovQu7L8ym9CPZj4Ot+vQh5fh2l
F8F1Rbx/v14En0PYF79exGux/i+ZT+lF8NxjNEfpRXAeCP7BrxfBfDalo/Qi
+Dz+tZVeBN+/17bSi+D+q36O0ovgetExR+lFyD21jtKLYPuRzFF6EYlFOmKz
rfQimM9dcJRehJy/sZVexGaxTmuurfQiOJ+i+ZRehNzH7Si9CKmPYEfqRYh9
em9tpRfBc/3xHaUXwX13yXxKL4LzZfC/fr0I5iOwJ369CP58GxylF+Hf/+bX
i2B7XcVRehFs/8Gf/XoR8p44Si+C9cGeOEov4nQ9RMR/bKUXwfoU8H9+vQje
w/nJVnoRz1vDMeF9+PUiOK+P++zXi/Dvu/DrRbD9XelTehFcx+xlK70I5mf3
baUXwfvfVvuUXgTvM0C859eL4Pn+lo7Si/hyCwFkLEfpRfDrr+8ovQiei4A9
8etF8PPa4ii9CI6fajlKL4L1ZWHf/HoRbN+X2EovgvUOp/mUXgTrYVy1lV4E
z7MusJVeBNNTj630IsbHep+wpMdRehHMj8CX/HoRbI8O2kovgundbUfpRci8
lq30IjjeyuUovQhx/dsjHvLrRXB8lcVRehE8/ljCp/QimPen8ym9CLnP2FF6
EXyuxT4WVy/i9ICSB/rhvPj1IuS+HUfpRXB/Tn1b6UXIuXdH6UXIurej9CLY
3syzlV4E97kMdZReBO+7bOxTehEZm4oO6ki9CNZn+GkrvQipL2ArvYgGxTfd
vvgyUi+Cy2C43369CL6fl22lF8F5vNW20ovg8/HDVnoRbE8q+5ReREax8O5J
pF7E7Fn4D3/frxfB+a1EttKL4H13/2ylF8H1O9grv14Ez1NOd5ReBMcPbW2l
F8F8M0GkXgTHI+NtpRch9dxspRexSrR/DnKUXgT3k+WzlV6EjM9spRfB8fAx
W+lFyL3xttKL8PeP+vUi2E5Ns5VeBPfrn4/Ui+B5Lth7v14E39flttKLkPkO
R+lFcPwSxVZ6EbIv3FZ6EXzOh/qUXoQYlx8PvuTXi/DvB/brRUg+ayu9CKlP
4Si9CH6/sEd+vQied8a/9+tFSD5hK70I2UdvK70I7ufF/ffrRfC+c/y5Xy+C
eWAqW+lFcD9XuKP0IngfxApH6UXw/oZnttKL8PcP+/UipD/xKb0IySscpRfh
7+/x60UchHvuU8RWehFcF0D86NeLYP5R2lF6EcwfYQ/9ehEynonUi+B9dItt
pRfB+bL0PqUXUUAsHv9tKb0ITte0cJReBOeB4zpKL8K/z8avF8H9sHUcpRfB
7w/xl18vQuaXHaUXwfN28J9+vQjeN7LNVnoRPK+SyFZ6Ef796n69CLkH01Z6
Ebx/ob2t9CL4fY2wlV4E5wPBt/x6EdzPAf7s14vw93v69SJ4PuSIrfQipB5q
pF4Etw/h/vn1Irhf749P6UXwOrUhttKLEGmqfwcdpRfB85/DIvUieH4qV6Re
BM8HD7SUXoTMC9hKL4LztmQrvQi5TztSL4L77zdE6kVw/fuWrfQi5F7nSL0I
5gG2o/QiON89yVF6EdyXM99WehF83/H7/XoR3NddOlIvgveDfLSVXgTvh4T/
8OtF9BKJmbSO0ouIP71nwRufI/UiOH9R3lF6ETm4cS1SL4L1kMC//XoRHG+C
j/j1Irje6PUpvQjpb22lF8H1uR220osQ6acTWW2lF8H1shqO0osoJhZVnojU
i+A5uR+RehEcNzmRehGyHu8ovQjeB4v779eL4H196X1KL4LPA+IHv17E3SmC
WNtKL4LpazxH6UWwP7voKL2InRvg2FtG6kVwP+wUR+lFcHoK8aFfL4LzWddt
pRfB/AHxl18vgst/8M9+vQhOs+V0lF4E7xdu6yi9CLavGSL1Ivz7Bfx6EXOe
ii8cqRfB8dSJSL0I3sdcKlIvgsPnSpF6Ed9iwaFWc5ReBK+hwufx60X450H9
ehHzNFigHLbSi+D8V7FIvQj2J21spRch+7JspRchw35H6UUw3+4XqRfB+bhl
ttKL4PzuLlvpRXA+KLut9CJkPslRehH8/NZG6kWwnhQ+r18vQtbXIvUi2F4V
sJVeBO/3mu0ovQh259Ej9SK4/yydo/QiuB9xiKX0ImR9OVIvgvuTjEi9CH5e
OM9+vYj3+Dg5VkXqRXD/F+INv16EaBvJ+SRSLyL3hk1lqm6wlF4E66vYttKL
8D8vv14E8zbwDb9eBMcvXRylF+Hfb+7Xi5D/v6P0ItgeLrSUXoTM09hKL4Lj
UfBVv14En+udkXoRnKes6ii9COYRXSylFyHKH2WL20ovgvc74fn69SKE/MrM
QFvpRYjwonoKW+lF+PdF+/UiuJ/4qKX0IrgP9nOkXoScX47UixBdE+8rR+pF
+Pd9+fUiRBvy+iGW0ovg/NLUSL0I9h8zbKUXYYv00x5H6UVwfJfEUXoRHOfM
i9SL4O+H5+nXi+D5KZwHv14E6933/F9Vdx7gY7X/AdwSxm4GaezznPPFXJRK
C7Jerp0QWSZ72UaEbJUoS6qRJLppUUSLLNG0iHkQF9mTsmXfGWOpMOF3zvu5
n8/7/v7tjzDznOf5nM/2supF4FxdpReB9+lsehGYgz1q1YtAfngrvYhu/85q
efMHo14E3tcLjXoRl3e17l3smlUvAnmIR+hFIL518aV4EeiD+c2oF4G9jr2N
ehFYJzCfXgTu729Y9SLwfLifp3gRmNPuZNWLQN63OL0IrE9w50u8iCp+0dt1
o14E3q+lY+pFYA6rGb0I5DszY+pFYF/PKXoRaOdpQi8C+TYXP4kXgeewsVUv
QuJF8SJw7vYa9SJG+wLa8/QiIr/dqhdRrMHA4pXdz1+8iKg+Ty8CewFuGfUi
sF+iDb2IqK/ZqBexwbctHzbqRWCPzTGjXgTmvt19R7wI6VcVLyLqV6UXIfGN
eBHoz/mPUS8icg2sehHR/mR6EdjTvdmoF4Hfj3u/iheB7/nP9CKw1zfJqhcR
1b9j6kVgXqZmTL0I9IOts+pFYD96PL2IyCulF4Gff/2YehGoN7v3v3gRkc9m
1YvA3pgsehHwFg8Y9SKi/AO9CLnPiBch/afiRSAfcZleRJRXtupFRPUgehHo
e+9MLwL7nXLH1IuI6mb0ItZNmF6t51qjXgT2UHxJL0LeJ+JF4PVdNKZeBH6u
I+lFoI+8Xky9CNQX99CLiHyVmHoRiLO204uYXXZUi3xfGPUiEB8UtOpF4H2+
il5EQ/9A1ompF+HLciv3GvUi8PwvpheBff/uPi9eRJSvohch85niRcj9QbwI
Od/iRWAfS7uYehFII5WhF4H7y0SrXgTeHwutehGon9WkFxH1IdGLQP/cTqte
BJ6HYfQikC99ml4EvjcjrHoRiC8epxcR9S9Y9SLQr9gzpl6E7P8ULwL5Dvf9
FC8Cf942ehGox7j4T7yI5r6QupBeBN6f7v4gXgT2nzxKLwJ/P3e/FC8C+bBS
MfUiMKdSk14E9uF7r+2/XgT6o9bTi0C+0T3v4kXgnuHiX/EikH8rF1MvAp6H
ez7Fi0Dfg7t/ixeB94f73ogXgeehD70IpIt2G/Ui8D3IQy8C9++36EXg3Ln3
j3gR+E6tpheBn9MHMfUi0Afc2aoXIfPN4kXAh85v1YsQj0W8iPV1Z9Ub8Qy9
iKgeY9WLwHPxDr0I/PxepheBesRaq14E3u916EUgvnPxtHgReA9mG/Ui0Oex
zKgXge93TXoR2EPqvlfiRSDf1jCmXkS0D4FeRDS3TC8iip/oRcBPmGfVi2jh
oYF0ehG4Z6Vb9SLc2y5t5z56EV0GtC/w/U2jXkTUX2TVixBfSLyIaL7YqheB
tQHea/yvF4H8kft9ixdR6skHN9p1Rr2IKH8dUy8Cda3e9CIQJt+kFxG9l+lF
YN5+A70I3HfS6UWgv2AWvQj0394VUy8C+8rH0ovA/LC7X4sXgfvWqph6EcgL
9bTqRWCfVXt6EcjP14ipF4Hvh3t+xYtAvb5CTL0IxD9j6EXA+3bfT/Ei4DBk
0YuI5gpj6kX49dVf7aMXgbz6VnoReG720ItYcKFHlwHDjHoR4PKeoReBfoFO
Rr0I5B8HWPUi8O9132PxIs7mb/nI3C30IrAv6oxVLyLqJ7TqRfjHPdO9L8SL
QD/uFKteRDQnSC8C4+oZ9CKiOpFVLwL14m30IiJPnl6EzEuIFxHzC91eoxeB
9O0pehGYSz1l1ItAu01jehE+nf76ZqteBO6Dk6x6EWV8wO/iMfEisI+ngVEv
IupvoBeBfFkhehHYn9bFqBcR7TOz6kWgb/srehFlfeErB72IVRvubrfqF3oR
mE9bGagXgbjjM3oR37cx1d8+FagXgXSTe5+IF4F+6Bz0ItDvUyumXkSiT8At
oxeB+ZkbVr0IySeKF4F+qFfoReBe6v6+4kWM8YvC/qYX4cfYGs2nF4E9le7+
KV4E+hPi6UVEvxd6EZi/GEcvAnuyZhr1IlA3u23Ui8jvE33djHoR4g2LF1Fi
efdCJ9x9UryIQzcvdf86oBeB+q57XsWLwHxSb6teBOpDA616EchfL6EXsfZG
/SnXexv1IqL+oZh6EahP5acXgd+Xi//Ei0C9YSm9CBzrOHoRmDucSy8i8pno
ReAe7O6P4kX4db5ztxv1IvA5WkAvQuor4kUEfsGhu/+KFyH76cWLQH6zL70I
xJuL6EVgr9ImehH9Ux4uNuMTo16EeF3iRSx5ftapNe68ixch9VbxIm5VdQf7
I6NeBPYAfEgvAnOz79CLiOrl9CJQzviXVS8CfnJeq16EL8NMHWrVi8B+vwuB
ehHR/IFVLwLzOaXoRaDv2NCLwH1iFr0Iv15h4Pf0IoIFjRNWnTfqRWBN62yj
XkScb8SeY9SLeMAPUrxk1Iv4uODZbidL0Is4lcM9WG3oRWCO8zF6Eb6sUGgL
vQjxisSLQB6uo1UvAnmGp416Ebn8YPTtQL0IzCWtNupFoK/J3W/Ei0C/3U/0
IlA/dvG9eBGYl6lu1YvAPOs1ehHwahbQi/BbbZ5y51u8CKnviBcRzbXQi9h9
6Z0Jmx+mF4F5Zvf7Ei8C+X53fsWLQP9CW6teBOZMm1r1Ir77/PzKoD+9COwD
eZheRLJ/QScb9SJwD5xKLwL9OEWsehFrvlw55vNj9CJQz/nIqhexbe0HI69l
04vAv68LvQjsqxxEL0L2NYgX0RcBD70IeE51jHoRUT8+vQjssRpJLwL1vaNG
vQjE+V3oReC++Ca9CMy/LqYXgfphIr0I7KU9FKgXgfpJF6texHIXZjz6Gr0I
7NNbYdSL8GO1rx6nF4E9VWXoRaA+WYJeBOo34+lFYJ9LB3oRqAusNupF4Lzu
oRfxrTumE+LoRWCfQgl6EeiXdt8D8SKwH65XTL0I5PP+RS8C/Z4H6EWgbruK
XkS/C+kFtzYx6kU08Iv8UuhFoN+rXky9COzf/3dMvQh4fXH0IjBfnY9eBPLg
N+hF+DbXhhPpRfj1V7vc8yNeBMIUd97Fi0D+cxK9CMwDVKEXgX6N40a9CPSL
d7XqRaCO87lRLyKnB80rGPUiUJ8dRS/C3aJvd5ph1ItAP1zMqheBONe9P8SL
wN7KOHoRUZ7IqhdR4OPM3NNb0IvAfnAXP4sXgd+Xu2+IFwG/+E16ET39hepV
ehGYP3D3SfEiUFd18bR4EZivdM+neBHIP79HLyLasxGoF4G9SY2MehEzAvdm
r04vAj//kla9CMSnE6x6EfDW99OL8O1SVSvTi/C8b92B9CLgQzagF4H+/ev0
IiQfJ17EeP8gvEIvAn0Qfa16ESmjrjw2ZRG9CNwfZ1v1InBva0QvYmHgbs4f
04sY6BuxatKL8NvNVoyjF4E4xn1fxYtAv2E2vQi87lw8IV4E9vhPM+pF4Prg
4nvxIiR+Ey/iGV9oPxyoF4F9Y+75FS8C8yPPxdSLQL0hoBeB93dDq14E5gsb
04vAnM0yehHS3y5eBOaZWtKLwL7AHka9CMyDrKIXgfxRllUvAvcB9/0TLwJ9
nYfoRfTwg9BnA/UiML91gV6EXwOwtQ+9CHynE416ETtnDU9evJleROTz0otA
vWWwVS8C36eWMfUikG9z3z/xIpCnuWjUixC/TbwId4tsf8G9r8WLkP5N8SKQ
P1xLL+LuLyf/WHcyvQj04z0YoxeBxXhGvQipb4sXgX1bdelFLHGvqc+r04uI
8s9WvYioX5xeBPaUuvMmXgR+vy6eEy8C/kaGVS+iqG8EamrUi5h2xl3AK9KL
wJ7h3vQi/NqChBeMehGYo04x6kV4PqHwp0a9CPw+3PtRvIhoXpJeBMbj7rTq
RRTxjVtx9CIq+xdNC3oR2LdROqZexO38d3faPdSoF+HXPX3d3agXgXJsVXoR
iMteN+pFIM9dzaoXgfzkVUsvwj9f7nspXgTmk3PTi8D+qNn0Ijb48vNcehHY
c3SYXgTqM8PoRWBfwA6jXgT60dz9QLyIev7Af0kvQvZPiheBfPtX9CJefcR9
0GfQi0D7tDuP4kUgnplPL8KnrY7tMupFRPFQTL2IRAy2GfUisEbYfY/Ei4j6
lulFpGVWHLnA/XvFi0C9aaxVL+K2XxuaZdSLOONeV0lP0IuQfhPxIvwasErn
6EXANxlt1YvA9/obq14E9mK9Ry8CfYYH6UWU9WBrFr0I5Kfc91a8CMRB7Y16
EcjzunhSvAj4mv3oRUR1UqNeBO4f2YF6Ec0WLn5+1qhAvQjka+fTi0B9qLBR
L+KedqseWPo2vQjMvayjF4E+rZX0IvKgUGXVi4jqUFa9iMvuLVG2M70IvI9c
PChehF9zs/ATehGIF7KtehGIb7tZ9SIa+cXYmwP1Iir4NEwbehHibYoXgf0f
RehF4OebQC9i2hIXKNWgF7GyaIOBxR836kUgL3Q0UC/CPx3P5qIXgb0js4x6
EbIvVrwIxOkp9CLw73qEXgTyTfGWXoQvrM8z6kVg7/bqQL0I7FOuTy+ikLv+
juhCLwI/n670InCvjRn1IrA/Kp5eBPbEuXhYvIgCfjHeq/QisMenNr0I+NXu
vIoXAZ/G3V/Ei/Cfpxn76EXAJ3U/T/Ei0F/inh/xIpDvHRuoFwHv9it6EXIe
xIuo6F7jxX8P1ItA35eLb8SLQN3nBL2IN9Ia/LD4DXoR6Hdz7xPxIuB/XLLq
Rfi2lu4n6UWIpyBehHjO4kXgvLn7p3gRUV80vQj0GbSjF4F7e1WjXgT69VKt
ehEIX6vRi6jlL7wfGvUivupfu07i30a9CMyRu3+PeBGY879ALwLf6+X0IqI9
d/QiMD9a2KoXgf16OehF4N75hVEvAnHzenoRfiro5QmBehHIb7ShF4E4YRy9
CLzv76MXgXigPr0I9L3soBeBP+d4oF4E8neH6EVgf1tzehFRP6RVLwLfHRcv
iBeB+YdN9CLw3DxHL+JJ/1ksZdSLwHetGr2Iwf5xaW/Vi2jpG382GPUi/PrG
Dy7Ri8CeI0svAvHaffQionlyq14E6kdpgXoRaU1+3rvJ/T7Ei8Ber2uBehHR
HjF6EX5spcdOehHR/LpVLwL+yZ30IrBGpxm9CORbH7XqRWDfxQGjXgTqcr/S
i0C/nXufiReBvovfjHoRN/ya92P0IuA1tqEX8dPEHmdPue+jeBGF8jX6avx3
9CJ8mSbzPXoRb377n11T6hn1IqJ9xEa9CM9lrC1CLwLv4XvpRSz2a0jq0YvA
WE4cvYhoTw+9CMwvJBv1IuCnzKQXgf4v9/0XLwKexi/0IpAny6AXgX3K7nsu
XkSUzwvUi/Br45c1CtSLqOw/CGcD9SKQP+tOLwL35WH0IjD/+yW9iAUuDJnv
3qfiRWBfZAq9CNynWlv1IpBHHW7Ui/BtMrXceREvAves3PQiMD/X06oXgXlQ
9z0TL+Llmn5BP72IqN/EqBeBet6f9CKQz0m06kX4a+sL7n0jXgT6Cx4y6kXg
ue9OLwJ72rbRixhdpcDVqYsC9SLQJ97WqBcR9fkZ9SJ2FDUTm66kF4E+/TP0
ItD3uYNeBPr1mlv1Ij73nMt4ehEpww4kl0s16kUgL5rTqBeBfNkaehHY5/wX
vQj0hZc26kXAOzhKLyLmE0Vz6EVgTvfjQL2IaF8NvQi/FveEu9+KF4F+p1L0
ImRfongRz7UZe+jaDXoR1xJLFZm4m17E5a0PPrRgCr0I9Ev2oRch+THxIvB+
c/GmeBHoO3PfB/Eillb0i/HpRWD+tiS9CNw3Eqx6ES4q2LdwOb0Izz5sy6YX
gXk79+eLF9HHN+aPpheBfKb794gXgTnNzvQionoCvQi4DzWMehGo//yPFwFv
7gl6EX6s+oNX6UXgtem+p+JFID3YKKZeBOqM7vyJFwG/Zw+9CPhB7nsgXgTy
Zw3oRUT7hOhFIC4cQS/CXxsmfxmoF4F6qLtvixeBPVVTjXoRsl9evIgZszbv
j79FL8JzuzdKGPUikI9836gXgb7J3fQicF/YatWLwJ65A/QiUA9390PxIir7
hssb9CJwDucF6kUgX+TuZ+JFIN66l14E9oR0pReBPJeLF8WLwP2yHb0IzE1s
D9SLQP4gjV4E7sfufIgXgf15VehFRHVvehHoT3T3dfEiMP/tvr/iRfgy3rvu
PIgXcWO5u0gtpxeRur1a/kev0ItAvbk/vQjMzfamF4Gfm4u3xYtY4sL89K1G
vYiZvz+0+s/n6UVgXqmNVS8Ce1v60YtAXa6XUS/iUR9YXqYXsaPyZXvG3RfE
i0Df2FZ6EZjbf5ReBPovptKL8Gv+ug+lF1HPL8p9gV7ElVzn53Vw33fxIo5k
Ljo40v19xItAWaanUS9ir0+TLTDqRfgw/mAOehGY0/+IXkTB5Pqf/enuT+JF
uKj8xSLL6UXAR02gF4G8QRK9CPTnu/hKvAjMc/6PF4H3ZDK9iNPz/0pb4s6f
eBGoe/WmF4HvwHqjXgT8jmx6EY19obsWvYjIP6IXcaRJj4bvrqEX4ccomp2k
FxHtB7LqRVy6u9Sl90fTiyjsBx2q0IuAV5Ri1IvAf8+mF4G6QzV6EYin99OL
iPKPRr0I5Kdq0Is4XqLcphM9rHoRiIsP0ItAXfwuq16EL1/ss/QixA8RL8KX
s0/ebdWLkP468SI6+URrD3oR0q8sXgTmgzpY9SJQn3XxkXgReF9Opxfxw+Nf
trr2P15EFNfSi1jt2/on0YtAf8t0q14E3ged6EVgL3I8vQjsF+9g1Ito7wdl
2tOLwFx/X6NeBPIc91j1ItB39qJRL6K1b1zvSy8CexU60otAf0k9q14E+jlu
B+pF+DG5+5ca9SLQRzrHqBfRzV/ICtOLiOKlQL0I7PmsRy8il3+BZgbqRWDv
RjV6Ebhn7TfqRaD+/ga9iI+fmDTzw+NGvQi089akFxHdu4x6EZHvTC8CHvcN
ehHon25ELwJxdm16Eb6t9bZ7v4gXgb7NVla9CORdx1j1ItBH1ylQL6KwX0Ta
2agXAd+uPr0IeAk/0otAnXoWvQjsuXe/D/EiGvnGxkFGvQjst3DxoXgR2L/4
jFUvom/efxw7NCpQLwL73F38JF4E8o5/GvUi0H/fhV6ET7vUeZleBPrXy1v1
IjA3fY9RL+JQ6vA+YxOMehGYnypHL8JFJ1f7ZdCLwL6JVHoR6Af+hV5EHZ/Y
LW/Vi0CfTkl6EejzOmLUi8Dv4zOjXsREzwLkoRcxwgfw7j4qXkQbX7h1P3/x
IrA/K39MvQjMy/1h1YtAX/Zv9CKwP7KWVS8Ce6VbG/Uicrvbx4xbgXoRvlwz
axu9CNRj4qx6Eb7N6U33fRIvAnOYK+hFoM96CL0I5Ocz6EXUR+KJXgT2IK0M
1IvA3u06Rr0I5OGm0otAvWxfoF6EHwuen27Ui2iCxAy9iATfIP0nvQip14oX
UdAv/B5DLyLq76AXIZ6ZeBF43odY9SLa+8EZF9+JF7G2nQtQfw7Ui9hYyF20
M+hFIG4oTi8C+3sDehHYp7E/UC8Cf251ehGYi3fvL/EiMG/Wnl4Ezl0mvYjn
PaD8rlEvAntgTtKLQN3ue3oR6Ld5g17Ehaxf+6a5eFW8CL9WIcdv9CIwL/a6
VS8C/fq/0Yv44vzK4Fp9ehHoE0ihF4HfSyt6EatyuP/zJHoRo3zB8WagXgT6
d/Jb9SLg896mF9HxLhcBzKUXcfWwC9DcfV68CPEhxYto4wfD3fkSL0LiEfEi
MC/xB70I7CefQC8C56muUS8CfYnV6EUgH+GeH/EiUv1iJ2PoRfiGunutehHY
m1zbqBfhx0J2FDLqRWCeZza9iLrf1hn0TV16EX+85w7yJ/QicB//iV4E7mMn
rHoRkTdn1Ivo6QuntehFYG/DTXoR61am/DjqY3oR2DN9PlAvQjxo8SJQv+xP
LwL58d/pRaB+sIReBLw6970UL2Jagx8W93DxungRqP+4eEa8CNRz+1n1IjCn
/x69CL/+6psKRr0I1Aea04vYcGTLkpNz6UVg31Z9q16Eu61U35xCLwJzV2Wt
ehFRHEsvAr//RYF6EagHbQvUi6j2wumXbkwO1ItAP7mvB//Xi9g2NHe9+n/T
i/hkUKVDqX0C9SJed+HUEBfvixeB+WUXv4kXgbmpBfQipj7n/sT29CKifm6j
XgR+zuPoRcAbud+oF+HbRka78yZexMsHlw5uNzJQL0LyHf/PizgaqBcR/Z6N
ehGoE8fRixjuB/MvGvUiZrjPfV53HxYvAnNqGfQi1iYUrTJnhlEvwrMAw343
6kXgPlOdXgT2T5yhF4Hvnjs/4kXMrvXEncX304t4fHvzi2WK0ovAv/spehHY
e1SHXoRf23jdxQfiRRzrkOP1flmBehF4TtvSi0AfeDF6EZhzeIBeBO4nnax6
EZ9N6T8i35pAvQj0DzWlFxHtVaUX4cuI21vRi0D+by69CMTjRelFYA9RSaNe
hB97znU/vQh4VO5+IV4Ezs14ehGY824WqBeBe8AxehHwMavTi8Ae51v0IvDd
K0ovAv//kF7E/DSz56h7/sWLQN6ouFUvAnNA99GLQF9sv0C9CNQbJln1InD+
OtGLuOiu7x+NCdSLiOrf9CKQj1xILyLaO0gv4kqXD/KN+pVeBOoCll4E8gjD
6EXgHuziE/Ei9s6s+sNPn9CLwPziMaNeBO4NXa16EYifytKLgP80hV7E+3e/
NnXrr4F6EYh/Khn1ItC/s45eBNba7wzUi8DvPze9COxZLmDUi1h2YNfAZlvo
RWAubbZRLwJ7M933XryIzLiFee4pQC8C/StnA/Ui7vOLzoob9SIwz+HeZ+JF
IN/yDb2InD4wuZ2kXgT2kbWw6kX4Nc47egTqRaBvYCq9COyfSDbqRch8gXgR
mPv/OFAv4vNLu1r3zkpSLwL58TfpRaB/wcW/4kW09X+x4fQiMJfejF4EvJYj
9CIwJ+GeP/EiorlaehErRu6fdLI0vQj0Iw0Nwhv9m5/8q+zfGQU2fPp8o1Px
4TtP5jh1x6IbGbmur066/+748MHe35yKr3M940bVXzaYZ4uFu7s/fbr85r8y
jq/a82uV0UXDYd1iZ6p2+TNjt8kdFMhbJCzW+cCZh09fzfhx6j2p594qFC5+
7K2zTUZdyVhxsVv6lqSCYat2Lc61z3s5Y37HV3IsXpI/PNs65/keb2dlvLVy
RYs36saF8W8P3bu3WWbGy0lHZg79KW/YZtrv+648dS5j+JTCh9p1yRO+NqXV
gcKTTmf0uVAr+f5TucON478/WHneiYwOHZ4aXuLZXGGesVUONVxzNOOf381Y
9UeunOHEk9XWfLP6UMZT9cYVXZx0O2N6rYRhpx/KEX5bqWKNxPgS4eoh+48f
vHUrI98nzy39sHPxMCV1xomzaTczOplfa1SamxBefqTbM/s/zRmW/seAewq9
VDJsuDL9Uq+sHOGAT39cMmNTifCxBvOHbkvMHe5c/12Bm5fvDOetvp31WK9c
4fI3JoyYVPvOMM/aZllNd+UO42/VLzryi1Jh+j8vDFnz6h3hwtrdX7rQ566w
3/o3L9b+Z57wyCMNEweVTQzvavrgkBXZecLtpwtnHtmdGG7auC+z+oq84aoG
NT5ISSsdjm3x4tMLU/OFrd8f/fPuJmXCqltMZsVYXNi8dd71j94qEx5ovXHw
uwfjwoRr2+tvTC8bpm1PvVB8Vv7w6x/GftF4SLmwXrv4wWltCoStTnU990Pl
8uHFXV+fz5uvYPj7B7k61j5cPpz7WNfU8RkFw+O/ZH+09J0KYbs9t85dH1Uo
fOtQjiYzq1QMc3WeN2h4jcLhgaI7uqZPrBgu39v03PnThcNvCh9b+fvhimHf
bucHPvVRkfDS/P1HN9ZNCksenH72UBf3nGxtt6PWnKSwz5LSX1fLXyw8+NIn
5bdcSQrrZJ0fMeDJYmHjuieS17v3afF7M2ouWFMs3LRudurNxe7798ybV4+W
iw+rVfh6+vd5Tbjuqz4rKoyND9+/0TfzuxdNOOfKAyNS9sSHDduOCR508eXw
mnE1/31fQnjXI3eeWvSwDVs+u+/KL9MSwubpP20/0cuGJn3R8oRzCeGEe+qk
bI+3Yfaf44a3beritd9ybrnSx4Q/P9Tu/tfnuXi5Te2S7+Q0ej6K3yx2+GKT
QM/HUTP6tVFpSXo+lrU49ODt3RX1fIx/5l9HJ5etqOfj/RrdypTbWF7PR+1x
ycOqPV5Oz8evP/21sc7JMno+RiRuqNDy2dJ6PuL7zRzZ9Y5EPR+LV/TeOuCt
Uno+Wua6144J7tTzcbrt7bGvLCuh52PS+1t3zm5QXM+HOTenysLt8Xo+wocH
vpjevVgo56NwnayOA939VM5H8lvTe51192M5H03O1Rg80N335XyMafvEzkaH
Y3o+hu4o+8XpyjE9H6cvHy95s1VlPR+Llva6r8Y7lfR85BzRdUKXIlX0fDS9
NjZpYflkPR9/rJ/4fDg5Wc9H51PTMm4sT9bzMWh0/75zspP1fHx6dtD0w3mS
9Xz0LvHz4GNhsp6PfOmPTZpeIlnPx6i3Xx3ScXJlPR/f3z7StvFfVfR8jGjc
8vXsUlX0fLTpMPHhuTMr6/molHZ1S9Clsp6PgoljeuYrWVnPx9j8qaOqLq6k
56P6ylxj01Ir6fnIOt/+dL7+lfR83Fuj7h+b3M9HzkfdTXH5f/xHTM9Hn+TV
TXOcjen5ODBtVPazHWJ6PmoO+E9mx7ZWz8fIBp3uaLXM6vm4PuhwydMZPB+D
d13v+OSLPB97x80ukn3U6Pm41ffCK3Ny8nwkHcjTKGcvE/4fOHf1eQ==
      "], {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwd2QMU3GgXBuDatm273WJr2+bWtm17t7Zt7tbc2rbbre3+z/znzHPeJJNJ
8t07mZlkkjbpUKV90CBBglQPFSTI/zNCkCDVqEoVKlOJilSgPOUoSxlKU4qS
BPP6WrImNQhuvo6sTQjT9WRdQpquL+0ySAMZWoahoemwspEMJ8PT2LRHkIhE
oomZyDIKUfnDfDQZnRjEpKllsWRs4hCXZpbFk/FJQEISkZjmnksik5KM5KQg
Jalo4fnUMg1pSUd6MpCRTGSmpfWyyKxkIzs5yEkucpOH32hl3bwyH/kpwO8U
pBCFKUJRilGcErQO1FqWojRlKEs5ylOBilSiMlWoSrVAb6lBTdrYTi1ZO9Aj
6gb6E+hLoCeBXgT6EKh/oOaBOgfqGqhjoF6BmgTGGxhH4Jhoa3ttAkk72tOB
jnSiM13oSje604Oe9KI3fehLP/ozgIEMYjBDAtu2n6FyGMMZwUhGMZoxjGUc
45nARCYxmSlM5U/+YhrTmcFMZjGbOcxlHvNZEBiTfS+Ui1jMEpayjOWsYCWr
WM0a1rKO9WxgI5vYzBa2so3t7GAnf/MPu9jNHvayj/0c4CCHOByos+M6Io/y
L8c4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4zwMe8ojHPOEp
z/iP57zgJa94zRve8o6Ojvu9/MBHPvGZL3zlG9/5wU9+EfiQCkowghOCkIQi
NGEISzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKSk4KUpCI1
aUhLOtLTyRgzyIxkIjNZyEo2spODnOQiN3n4jbzkIz8F+J2CFKIwRShKMYpT
gpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dahLPerTgIY0ojFN+IOmNKM5
LWhJK1rThra0I/BF04GOdFaXToGkC13pRnd60JNe9KYPfelHfwYwkEEMZghD
GcZwRjCSUYxmDGMZx3gmMJFJTGYKU/mTv5jGdGYwk1nMZg5zmcd8FrCQRSxm
CUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCTv/mHXexmD3vZx34OcJBD
gVqq62F5hKP8yzGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u
84CHPOIxT3jKM/7jOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvAj84ghKM
4IQgJKEITRjCEo7wRCAikYhMFKISjejEICaxiE0c4hKP+CQgIYlITBKSkozk
pCAlqUhNGtKSjvRkICNd9SiTzEwWspKN7OQgJ7nITR5+Iy/5yE8BfqcghShM
EYpSjOKUoCSlKE0ZylKO8lSgIpWoTBWqUo3q1KAmtahNHepSj/o0oCGNaEwT
/qApzWhOC1rSita0oS3taE8HOtKJznQJ1IZudKcHPelFb/rQl370ZwADGcRg
hjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlT/5i2lMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatYExug9sFauYz0b2MgmNrOFrWxjOzvYyd/8wy52s4e9
7GM/BzjIIQ5zhKP8yzGOc4KTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4
yz3u84CHPOIxT3jKM/7jOS94ySte84a3vOM9H/jIJz7zha984zs/+MkvAhca
QQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRiEJNYxCYOcYlHfBKQkEQkJglJ
SUZyUpCSVKQmDWlJR3oykJFMZCYLWclGdnKQk1zkJg+/kZd85KcAv1OQQhSm
CEUpRnFKUJJSlKYMZekeuIaT5alARSpRmSpUpRrVqUFNalGbOtSlHvVpQEMa
0Zgm/EFTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7oFjpUe9KQXvelDX/rRnwEM
ZBCDGcJQhjGcEYxkFKMZw1jGMZ4JTGQSk5nCVP7kL6YxnRnMZBazmcNc5jGf
BSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHezkb/5hF7vZw172
sZ8DHOQQhznCUf7lGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zl
Hvd5wEMe8ZgnPOUZ//GcF7zkFa95w1ve8Z4PfOQTn/nCV77xnR/85BeBGwxB
CUZwQhCSUIQmDGEJR3giEJEezoVIMjJRiEo0ohODmMQiNnGISzzik4CEJCIx
SUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc5CI3efiNvOQjPwX4nYIU
ojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOAhjSi
MU34g6Y0ozktaEkrWtOGtrSjPR3oSCc604WudKN7oE/0pBe96UNf+tGfAQxk
EIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJU/uQvpjGdGcxkFrOZw1zmMZ8F
LGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2sZ0d7ORv/mEXu9nDXvax
nwMc5BCHOcJR/uUYxznBSU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe
93nAQx7xmCc85Rn/8ZwXvOQVr3nDW97xng985BOf+cJXvvGdns7fH/Invwjc
XAxKMIITgpCEIjRhCEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJ
SEoykpOClKQiNWlISzrSk4GMZCIzWchKNrKTg5zkIjd5+I285CM/BfidghSi
MEUoSjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIx
TfiDpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAG
M4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqfzJX0xjOjOYySxmM4e5zGM+C1jI
IhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtbGM7O9jJ3/zDLnazh73sYz8H
OMghDnOEo/zLMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d7jLPe7z
gIc84jFPeMoz/uM5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4yS8CfyoEJRjB
CUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGcn5
Hz0tJok=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwl2XP0HIfXB+DvL2bDpnEa2zYa27Zt22hs23Ya27btNraT99nz/vGcz8zO
7uzMvTNz9uxN2LBdxbb/CwoKqhIqKCgJwyIEBQ1lCIMZxEAG0J9+9KUPvelF
T3qQ1Of/liMYTjLro+RIklseI0eTwvJYmVKOk6lkasZbTiMnyLQyHRMtp5cZ
yMgk65lkZrIw2XpWmY3s5GCK13LKXOQmD1O9llfmIz8FKEghptn2lyxMEYpS
jOKUYLrtJWUpSlOGspSjPBWoyAzvqyQrh/r/elalGtWpQU1qUZuZ3ltH1qUe
9WlAQxrRmCY0pRnNacEsn2spW9GaNrSlHe3pQEc60ZkudKUb3elBT2YHeid7
04e+9KM/AxjIIAYzhKGBa4PhjAj0mZGB/jKaOfY3JtDXQE8DvQz0MdC/QM8C
fQr0JdCHQL0DNQ3UK1CHwDkFjiewD+Yyj/ksYCGLWMySwHbfs1QuYzkrWMkq
VrOGtaxjPRvYyCY2s4V/2Mo2trODnexiN3vYyz72c4CDgePy3YfkYY5wlGMc
5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEPecRjnvCUfwO1
clz/yWc85wUvecVr3vCWd7znAx/5xGe+8JVvfOcHP/lFUOigoP8RjOCEICSh
CE0YwhKO8EQgIr8RichEISrRiM7vxGCB4/5DxiQWsYlDXOIRnwT8SUISkZgk
JCUZyUlBSlKRmjSkJR3pyUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQrxF4Up
QlGKUZwSlKQUpSlDWRY6x3KyPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgj
GtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs96EkvetOHvvSjPwMYyCAG
M4ShDGM4I/ibkYxiNGMYyzjGM4GJLFKXSXIyU5jKNKYzg5nMYjZzmMs85rMg
UNfAPljMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBb+YSvb2M4OdrKL3exhL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jP
Ax7yiMc84WmgHur6r/yPZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+UVQ
GM8DghGcEIQkFKEJQ1jCEZ4IROQ3IhGZKEQlGtH5nRj8QUxiEZs4xCUe8UnA
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
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          AbsolutePointSize[6]], 
         PointBox[CompressedData["
1:eJwNw1VSAlAAAMDnv5fwNCg22IUithJ2FzYodjf2Kd2d2apkJpauCCGkjFSG
UG2NUWuts94GG22y2ZhxW2y1zXY77LTLbnvstc+E/Q6YdNCUQw474qhjjjvh
pFOmzZg157QzzjrnvAsuuuSyK6665robbrrltnl33HXPfQ889MiCRY89seSp
Z5574aVXXnvjrXfe++CjTz774qtvvlv2w0+//PbHX//8Bxf6Ndo=
          "]]}, {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, AxesOrigin -> {-0.3341610937500001, 0}, 
     PlotRange -> {{-4.99979, -0.40594}, {-13.1139, 0}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"log10(h)\"", TraditionalForm], 
       FormBox["\"log10|max error|\"", TraditionalForm]}, 
     AxesOrigin -> {-0.3341610937500001, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-4.99979, -0.40594}, {-13.1139, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Dyskretyzacja trzypunktowa\"", "\"Dyskretyzacja Numerow'a\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674844250003394*^9, 3.674844449868353*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res1", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<Konwencjonalna numerycznie (h = 0.3927)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
  3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
  3.6740493982893457`*^9}, {3.6740495458190565`*^9, 3.6740495651706567`*^9}, {
  3.6740496068349075`*^9, 3.6740496132988644`*^9}, {3.67405040145147*^9, 
  3.674050423080288*^9}, {3.6740504558243546`*^9, 3.6740505841657143`*^9}, {
  3.674134005445135*^9, 3.674134008066327*^9}, {3.6748437118495383`*^9, 
  3.6748437211504025`*^9}, {3.674844010857813*^9, 3.674844020444563*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0., 0.}, {0.392699, 0.374132}, {0.785398, 0.57254}, {
          1.1781, 0.464564}, {1.5708, 0.}}]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5708}, {0, 0.57254}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.5708}, {0, 0.57254}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Konwencjonalna numerycznie (h = 0.3927)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674049373585709*^9, 3.674049399060174*^9}, 
   3.6740495663626127`*^9, {3.6740496100918727`*^9, 3.674049614051614*^9}, {
   3.674050219051771*^9, 3.674050264569045*^9}, 3.674050424013076*^9, {
   3.6740504766362085`*^9, 3.674050500587179*^9}, {3.6740505570473375`*^9, 
   3.6740505851671896`*^9}, 3.674132703425121*^9, 3.674133805764184*^9, 
   3.67413400954967*^9, 3.674835941197234*^9, 3.674842230266562*^9, 
   3.6748435070076814`*^9, 3.6748441726526146`*^9, 3.6748444528731575`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res2", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<Konwencjonalna numerycznie (h = 0.0151)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.674843731809434*^9, {3.674844055458455*^9, 3.674844059619489*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
DrYaitWJJef1IL7/P/8CNd5cuw==
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5708}, {0, 0.561121}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.5708}, {0, 0.561121}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Konwencjonalna numerycznie (h = 0.0151)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6748441771774645`*^9, 3.6748444552195835`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res3", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<Konwencjonalna numerycznie (h = 0.0015)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6748437432423463`*^9, 3.6748437435465803`*^9}, {
  3.6748440881061673`*^9, 3.6748440916427*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
616/ZyHpxbKthcpNIHiPM5SF9Cw57XdqTZCQ83/67gcLE3RapwnPwlS+Tsti
UXqgCRa+OcMWZSx8Pr9/4+wTTXhbtjTqUx0Lobw0adNE5X8W3lSeXRd1vQl+
D1xt/3JZlF5oAk+dPuBjU+u8CeRm9X8kyMZzm8tqywKakNSW5nh3BhtkUt81
8q0JS5QVG51IHJrUE01YGyDZe2QBGS9wb/ubHPL6d3q+1CBx6SZvY1U2YYuk
G3PeUjZ4WVad3YQNC38lNa5iU3qD/H2zBYu/rmHjKiNCvf5XE6YmvtU4u4kN
S/HC1WGCzejWJxmlOhs2O7NV3eY14+xCA5UcLTalR5pxR/KmwHkdNk6E1W5S
WN2MI6pizwT02TBsH1rRr9aMrOe6H18dYMNYkrM+U6cZEzTXlE3plWbYtFu6
BRxhY4+7wNqzJ5qRWal0VuoUm9IvzUjtJQHTio1tXQtXCzk3Y6/2aVLKs7Fz
oYQq434zrhfSnhg4srHeeK1isE8zJmyRq2xK3zQj13J3SN8NNlakapNI3oxS
Dyvh9bfZWN2L9TIJzXhW1Clj58HGIl4azGlGs/68OH8vNqV/msH8k9qZ503i
oI+DwhN2M060zwlse8nG/IwLyid7mvFhJEeMz48Ngb/3ZNeNNcNhh8LUWR/Y
lD5qQXPS+JN5X8j4w84bafNa0OZ458MsEofHX7xY/lm+BZ/1L5zjjyTjs5+s
u7q6BQMnh7/3xLAp/dSCpi+Cb0vj2fil8llFancLTq9ImvY1hY3282nyHQdb
8KB6SPRKJhu9rxOUEk+0wOhHdIRGHpvSVy1IzxnqGytio3Fq2cqjzi1ImVMf
HV7ORrkmOaEeLTjppStuQWej2qZl2bhPC4I2q875W8um9FcLXBcVe78gcZ/H
vj6EteDXutbwZc1sSo+1YOqdT4ah7WykaYnJ78xtQSR/m9fKHjLeXkRJoqoF
/DFhlu/6ybwSskymhd2C3z6jdcLDbEqvtcA9op1uPcZGsLj6Qo+xFrwUJBXD
PzYidm5aZi7Uiv2PX9nN5Sfw3nW/5CrxVurvBKXnWhG9yvTaK1ECz9rPkiu2
Fdp6soaFs0kclzwh925rK84GPQzmziPgYeQyx3Z3K5TIVSGxgKD0Xite9Pdt
UFlExkfar5hzshX/dQjracgTcO96KEXYtkJ5TtC/7UvJ+IX3lkY7t8LMqWuT
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
l3RCl937zqfSvxCT6HgnY9EZ/D/Yqspp
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.56923}, {0, 0.561097}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.56923}, {0, 0.561097}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Konwencjonalna numerycznie (h = 0.0015)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6748441803020325`*^9, 3.674844457603572*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res4", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Numerowa numerycznie (h = 0.3927)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6748437529290013`*^9, 3.674843758565802*^9}, {
  3.6748441003162947`*^9, 3.6748441368421764`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{0., 0.}, {0.392699, 0.362928}, {0.785398, 0.555546}, {
          1.1781, 0.450987}, {1.5708, 0.}}]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5708}, {0, 0.555546}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.5708}, {0, 0.555546}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Numerowa numerycznie (h = 0.3927)\""}, "PointLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674844196752534*^9, 3.674844459563903*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res5", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Numerowa numerycznie (h = 0.0151)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.674049030948628*^9, 3.6740490446100435`*^9}, {
   3.6740491138346295`*^9, 3.6740491437102327`*^9}, {3.6740493279223967`*^9, 
   3.6740493982893457`*^9}, {3.6740495458190565`*^9, 
   3.6740495651706567`*^9}, {3.6740496068349075`*^9, 
   3.6740496132988644`*^9}, {3.67405040145147*^9, 3.674050423080288*^9}, {
   3.6740504558243546`*^9, 3.6740505841657143`*^9}, {3.6740506197824764`*^9, 
   3.6740506358651032`*^9}, {3.6741339916286325`*^9, 
   3.6741339944676404`*^9}, {3.674843501385213*^9, 3.67484352011412*^9}, {
   3.674843762767367*^9, 3.674843784402027*^9}, 3.6748441309884543`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.009166666666666668], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1:eJxdlXk41FscxqeSq26iXVLa01wJUxLVm6jQckWkNJW6iLJEkaW0SQttWqRS
k1C3skSmhGmQpWWYGdswZuaH0NiHGZSuq+6vf+55nvOc5zzf88f7/bzvOWfW
Xm9bl+EUCsV9aP5Y/z9W83e+ym6/hIFkToSg7RL+28eC10eN1W6JhU/sWuux
tEQ4rrAZrtBNJOtJMFa/NnKjJAnpi16vNrZPQyPTfIbW+jRoFeX3qtGY8HD3
CkvRZCJcvInZqv4G4TUMZwNpJq7q7hnObM9BkKa+5df0HOioLh1t5cpGlHfG
a4OVbKgomUQZ2edheVf5pTqtPDR/XaU11+IdpJ8e91P781HYZR4/jlaIklM2
okJuARKbLfUGZxWDohWs2JlQBF01nl2D+gd0HLHdfdP/PcYoVwq5gx+h6kkx
mrnmI1oGalxY7RxwapNuJahw0BjoE1DhVYr4R+GM8uISOMhlpptcudBbpiFN
yS1F9Dkmh0Xn4eVF94Tge1xSHx8/5R3h4Who1rbnG8sQn+WwJsCKT+otRzK9
2sdRswzb/NmSGNMKxAVQJbFNZYgZddZPlVaJCPUZnlqp5RgdpmJ8hlqFRSWn
36T5VyCIcnHg6ywBchidAhPjSkiDVdmHplYj0L+/Ilxeie29l8Oa1Wsg+z15
bmBSFYp9x1vvVhHC2SaB27BXQPYrxHnp85PPx1cj5OR2hmVvLeKKdpg/ya4m
+xdhMnvQ4cW+Gjgd3UU1ahTjYdCBPU+VhCQPCVI+dN73eiBEeB7v7WWpBDzf
B+HVRrXAsIlzNrgSuKd38fynwlr0rrIPU64jEJ/NnjLfToTkkJtNbHodtihu
+uZUieCWWWl1TFCHK263vI85ikl+9VCU8E+Y8cR4axYs7yqtx5gAvYie2RKS
ZwOc0imeT7dLoJ/9/fX+ogZYdRemG0VKSL6fsTnYmnM+W4LzFgyXWtZnxDJT
BVeHdJqdqiuMNm2EsPKk37qJBPpZc6hbmY1Yub7hzXUTAqnf/4pQozXBZSn9
z8N0Au6mCe3vk5pwTnXyZl4IgZmBTTZnqc3Y233I83E0gdxcqxgkNGOrieNg
UwpB+vMF2UtT7E+9I2C46uOujHtf4DSqdt6hCoL0S4pIlQJ2fD0BxuvNcxbd
kKLeS/35pDYC5iNSDzaqt0Aa4HwgQ0bg22oZhxHRAku7lbdDewikHacZ0FVa
cWGFVabrUN0j63CUxplWwJtq69xKYPbXl3L+YCvmqllMdh/inm+ugcjgNgg3
aMYdKSNIv9sgPui3LyiXwBJWzAglv3ZMOe6z6sgzgvS/HRPeZDCdrhGIM5le
FOTRgTjTc/cWHibIPHTAe7F7RMUWAsvyVPsG9Duhn5m1fOcfBJmPTmR25/tl
UAhc1+crkp91oniwoUPElSD96RVZlHTovGJXCDdWgn0/QOp0oaLOjhLhJsG4
qQ5d61y7EPhlvoGKrgQG1ye0UR91ocx8SebpKjEk1v4Hleq6YK/hpOJrIwal
gLa/WVuGKSfWfeGxfuVLhp/Xfb4IdFq/6507MtTYGHDEZ2pxLCljb6hAhmTu
j8AKoesytc5xSjc8Jn1n3F4gRPW0EGdD+26IaeMZ4w7W4NvN5fTJUd1YMcmn
pDuxGk823RV2lHbDluv4zbRGgOKi7VX8sT14OlM5UzFSQOazB62GA4nTdKow
30i78uyFHtx9e3gH06wS61KFPI+iHmQVe3OLbSsgd4OthbIc5coLHu52Ksek
+oFNOhZyNAbEfDzqVIb827s/DTslh3Xb2vTpdnz42uRurGHJcUF7X/uONTxc
+xBqyfouxzCxp8h4IZfMtwKjBogm1m+l6DBeu943UIEXel5xw7I+QS19uLkD
U4EVhg53Brd9QI6HS+5iuQIBE5sex9UXQfR5ds4EWi+m+mtE/bOrAJF3w1a2
+fSieb/9BpP3eTC1a84qSOrFncgb0W7z2HDixL/6u7UXjyNC7x8issj3qg8t
yybwwxyZeGV6gEnf34fWyJeanimpqMrQSTNL6IPSnAtzy3mJCPe8aDitoQ8b
Gh1F9mrR5Hvdj1//z7/1hF7i
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwt13c41f0bB3ArkZDVJhFJKutJCW+jJU8ZSVLhkYeQSGQkWUXTeOyKBooW
SglJRUrDyMo8X/uc7zmHslX8Pl3X76/7el3XOd/x+dyf+76/K528rP7l4+Hh
EeXl4fkT+V/N+9Lz1z8GPP+P8gvlleX+A3aWZg7KkjjWEbvnW7w5RMpzbFtI
ZBh96H4W7wAZ980iT0hsPNn3ICveC5lK5XuSSKy9PCJxI/4smi5npDqQuDs1
qCIlPgZ1gSG9t+NicHlF2Y2k+Awoa11e9+pqBlgTgrNGJ/MgP/lzPNY9D5t+
x1k88S6CC1cr8C/rInzotI3gUyxHjZBm1Wa+chgaW//MdqqAjG/0+DX5Cth5
mw4XHngPMwWOmCGzCmUrVcPLsz7BonlLdTP3I6xTVO90HK+FvsNQet+HGiyb
89Ik1qUeVM9jz7+y6hClVVlQHt2ALXkiJ0OCv2Lbjl2O2eeboCS0IHSlUiMq
L4wqRwa1oL7X5fezwiawrkiXdqW0QiT49xzLfS34xz8/Zji+HTp2f9kxK7/h
jEKFxtnnnTC6LO69AG1YP3NmnM+NgSctLdG6qe2oOmw7Iu9MoTwi5IpFZQc0
0j2bz/h2A1Lqj3KGO7HV8rVdoU8Pctf8fdKR24W1feaVa8/3YtdGnd8CPgz4
LDihl57Qh8GZyFbtNgZYV6u9Y1L6EBF8/XlGOwNOoquyQq/3Qa+y4blwJwOW
85pFj2T2oWe55so2BgPqAvpdq5/2YbbfLeFkPwPcCaHw/K992FWu3hP0nQH3
rptVFZL9GJ9xsOkWpHDkUa0VHduPtJAjO8U2ULBfXBWukdiPzTcUGuzUKdiF
vyzwT+1HxLrPe7M1KFjY5EoK3O5HkJrNel1tCnozEfXLn/QjfoP13/s2U5De
o2O1p7Efnudm5x8woVDBuWGZv2QAnZmluYk2FF7tTwibkB2A+JkIr/L9FIpf
X8zXVxiAcUmdIsuWQl6iv0S16gDaJYLsdA9SuK5vWde9ZQCz8Vq/PjtQ8Lsi
YCltP4D6BPWR10cpKK/zsPC/PQC/EYPytkAK7NhOlm/2ACZUNuXXB1EoGLU8
55M7gIeLJvLen6agX7qp2LOAXJ9j255/hoK1meAq5zcD0A/L7woIoxDmdmvC
onsAKeEjod+iKbRnNaerKgyCqp/w7k2icFvYbLOK8iDa9ukLvkymcNSz7KuS
6iDMTenshBQKI9pZQis1B6F3aeE8ozQK8yp8fBYZDyJ+7TvrqzcobOoW3S7g
NAiH+uDe6TsU/pPbyum4NYgl9jobl+VRePaJ6V+VNYiLOdP/1BG3BsXw5ecM
YlQ3KuN8PgX55tZFkfmDuOR1zZxbQOFBzAlj1deDWPHX/LCCQgrveDKSTzEG
gVF+abESCtPdU0biK5gIz9XeK1FJQTYu49OkAhOh/s8v5BAbYtv+bmUmZPSF
awzfUYi6FnuscD0TF+eUnjtWRfbTenXyQQMmvDfU3iz6QGFdpTX77mEmqCPW
gYpfKDjefZxkeJ0JA66cpEkTBUGjH8vP3mRiuEXIuIr4Yav2nZeZTGyOzrPa
1UyeR7T4se5DJhSuVcrsbqGQ4FvxXruMicwdXSu2tVJ4b/RtWoXBhNbvAtXZ
DgrH25aFufYyoY5Z2xOdFGT87OdmDzKx8KuBSzex070eKcXvTBSdU5Z93UXh
lxhXTZaPhSvSoVPeFAX1dj4HiVUsTPxXtDetl0KT37Y+cxUWohJ5naeJz4hH
e1xVY8FGJ9jyQB+FamPRAJG/WFiumPxWqp+Cc86iuDnbWdj724739ADZTxO7
RVt3sbBeSWWyjji//fqN8D0spP1j+nH1IIUZcYXcWRsWNKeXCNYSp5xSezvl
yoL++x/VkiwKBgu8TDcdY+Ger8MtR+K+nPyaU94sfO/auvchsWbHxvaRABby
h+ebmtAUPpkYjXEukP+3pQT+w6bAI2Gzuvs+CwoCo00uXAonMmUWtzxmQVek
3DWduFunUejLExYe+++bbCCusLdmvShhwa/w3GIMUbjwwOph3EcWEvJvWM0d
JvsByfSoGhYMbtl0bSQ+9rXu6pmvLKxeoObxL/GeaQtvtzYWkgObzr4iltxp
rmVEs/DLti7N9TuFiDaxVTpDLIh/l5GLIR49/kV63QgLfI0fMwqJmxJ3jy/+
yYL20Y3ps8Q71ogOiM2yYHW9fKniDwpFpZ+aBfhpSCq7Jm4jvtZj9mJ4Hg3D
mKeRUcTz/UVy+8VorFLVmMomDpn3Ma1dkkZKnJ9HJbGjxq7g90tpIJrXdJZ4
1dmduKlKY4b61ucyQiFRUkg9aT2N3yE7t4cQC2ZXyV/WpBEj13wngXjw03a+
AF0aUXy8NmXEBxwFRzwNaNzM9smtI64eqew5Ykzj6fz8nz3ED5duqzTfRePe
GqOEOaMU5B4JPNu2hzyfv1ubNHGsUUX2FisaNU9EVigS8zZGJGvY0FDSk3JQ
J/Y5ahK92o5G2EmPa3rEPT/5AmXtachVzH7dQWwd88ZNyonG4owSISviSoVw
O2EXGt7BFzcfJN74zMhs1o2GYNt+lyPEd0159cY8aWQYise4Ey/uKFejT9Do
3nz9iTfxRe9QWcqPhoMd66sf8U9+Q7HmQBrn9PqGAomPJc/OfDpD43FYwNwz
xJ2qr4behJH718csPUtsXhbCKDpHY6B94ZpQ4nJLg7pHF2io2E5p/rFG3+/X
mVdo1PIobvrz+9sBLwvS4miUpZ3d9Od6UvPP3IlNpFE0PK0VRByZoZdwPpW8
T0Oo6iniMc1fkcE3yHrI/V52gtjlXYmfzy0aJx8dFPIgbjlw2uVoFo1i9+ih
P+9rytHdb59Do9DQq+7PehgcSzbJeUgjz0So05JYkx7ZMJpPIz0g+vl2YmV3
i+V4RkPEs+mwLvFS5gOhi8U0FhW11KoRix0VHmsoo+E37bdAjph/4F9qxVsa
rp0Jy8WI2b1yxYUfafA7/0hlkf1nHDmdzVNLQ/bizLxm4sbu5nizBhoFdqt3
viEuY8R6UO00cj3dlROJCxw4+9UoGnphVlXBxHc7Tbf695H8oX5oHSGObeeT
FeWS/E+c9FIjjjzoIGz7g8ZyQTWIEwe2lozdHqchw/P02zDJb6cW3y+bZsl6
aNt75xHb7K8rjuBn42jrnmNXiXc1rbv7ZS4bYl3qWh7EWg39Z50XsLFxm8vK
lcQqe02OPZZmo9Y+euc0OY/L6zNspxezEbdjs249sUCtrUbsSjbqHfuCQ/6c
34/V3SWabKytehH8npz/6l2rawR12DBdmzWWTPzqQ0SJ5RY2rMQObXIhvlel
lzBgwkaZ48els6TeBL19tE1qHxuRb0QsFYiPG4to2h9g4/2/j2QGSX068tpV
LucwG+J3Dt55QPz3K/kJAxc2TmmcWqJJLFsSf8/dnw3ZbPHj6zmk/ugOJRSe
ZmN+p3sAi9RDwRdmYTyhbGhvkjTLIuY+E7BLimZDorZ/5yLi8oJTIm9S2Qhf
Ip3JJvXVOdfu+JJSsl6e/BWHSH1+dpK5y6KcDbea6h5BYiH9gNVRFWx4hL5s
fEzq+4OaRMboJzYcH3/eMEP6wehorVVtBxtDhzcXXyb9IgI7dKJm2Qh6d0jm
RDeFBqEmqTJ+Dq5veLZbiFi53nl4dC4HItHdNumkH1U7h+c4LeBg+3qHtncM
8j4XXy4zWMmBn3NKrjDpX7cbtHjGjDmQW5VjbtNG7nfjTfvaHRyclt57qZX0
x+2uli+czDhQKApNOkzMmjruU7uXA7tL0sscv5H8X5Hbe9+Zg5jwzlYb0m/f
uMl/cDrPQTN3qaLIVwrUzPz42g8c7LgrZXqV9POZ14u/lX3mIJNprz/xnpyP
c6vkH9ZxoHMkWdmB2FpE79GFbxxUF8c2ryXzwLtFHtXGTA4KS+n8ogoKueof
+AqFuFimEqt78xUFX6dzJ1N3cJHu6rkh+ynJb6W44igzLgImDO9wnpD6OXid
95Q5F7SCzDxt4v7jT2Os9nORGh+R95LMN7ane+6LuHIxadZiX/GIzGsJRr1n
znPhruyrnXGP7Pe739ZOlVyYZYQfvniNQrZvdnLWBy6Cc2xTb5B5a7uieevg
Zy5c7POTHqdSOB9608GriYvQtXcaa8i8NmeLiXvwABeWmolOvAkk3/OizyYJ
D2Gbm26OymUKfGlSudW7h6BR8dkrisyLt3eWskWthjC4W6DYh8yTxhPOGyxt
hhAb9t/bQ2TeDLd+9rTZfghthoHS6/xJvRc/8KrXawjjFXH3y3xIv45Mb5iJ
G0LU14SbWW4UZj3XzGo2DSEkrUs7nMzD7gvNH6xrHQLnO/eo3T6SP2W+B1Q6
h5CR2BChYU3WV7z8iWz/EOakDXu2W5L9yLc5KjQ+BNZaMUml3cTTrwe584Zx
VEM0JozM2/f0hywrVIdheHHpXFcyz1tUmK7ych/Gj5SbjhQ/hacvx3ycjg2D
y0hTDuIj/eL5rdf7jg8jXyu1TYKX1LecKXs9n2G4TARKGsww4B2TkyocNIyZ
gMKCC5MMxNoJi2deGEYI1/8ph81A7fD7qZZ7w7ht/CpwsIF8j8jurDEeGEZq
duzcu7cYKO3v4RQe/46dUy/i0xQZOM2UO7SQ8x0yay3sdHS6cOfQhP7CUz/g
oSthOn+wA/LCXl784z9w4vNHvUUX2rGHV/3u8ZMj0IuLHTsg2oY+t6tWgT9H
4P8ytOWS6TfUilzefSJoFPusZWzOhjRDSW51qZDAGKb8VZICnRuhGiyiIXdp
DKFe/cv8135FpFTMmLzwOFRf9/NdGK3FjmV5697GjUNxU6NLyudPsD/kXWgl
MYHlbYXfL5VXQZkZaOJ4dQKeV+Z94Lv4Bvv75beJLpyEg2FN50f1F+hY7pp0
N2ESG26lx/kq3IeNkl5fe9Ikxg16mw4W5aJ2nYS2ZOok8nd4LNuwJxdvDErq
gm9MQuLkZE5qYA7uOYqLWmVPQm/jPqmzNXfhk/k84tfzSVzmLf942T8Tc9WE
Tli2TeLKfT7DiBPXEKrd8ep8xyTmHTTTPpCShmm9ArHSrkl0KN3KmvsqFezd
hx4o906ivSxHnCuSgnqvvIGf7Enohkz7UHcScP2JrX32zCSY94qlPqVcgkzp
uodtPFPgi3rqfYm6gKsVfL8W8E+R74XaXb/WRCOs8UHq6blTiNmclvzjRSTJ
C55GiwVTcDt0btL5wWkwZhsVz0tOwUlS2ub3pgAcELrvUyI9BSUVNa2pCl/8
vWTfAuUlU3jJs9he55kHKleqOhxcNoWjnS2dkdXOMFCdfRgrO4UfW+WqtUoO
okiz4VfliinMfKkwbX1pBo0tOWY/V05B6re962shD4P/AZ/IwCc=
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.5708}, {0, 0.561096}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.5708}, {0, 0.561096}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Numerowa numerycznie (h = 0.0151)\""}, "PointLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.674844199104949*^9, 3.6748444616138163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"res6", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", " ", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Numerowa numerycznie (h = 0.0015)\>\"", "}"}]}]}], 
    "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"x", "*", 
      RowBox[{"Cos", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<u(x) = xcosx\>\"", "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6748437785535555`*^9, 3.6748437909727945`*^9}, 
   3.6748441219410524`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[CompressedData["
1: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
RDlmsLytV9ypwL+toz1daeUUnldgA+tur3U1Gf81bu+F+ArIRATdS+0hn2NJ
14ZZlRV49nZ19rxJFWi+wzL+0V2BtBLjoPNzKyi8r8T9JT3TUlZWoHjfFIPf
SpUY46fD7RX4VKarHqRZifabo080D1bgu8a6/7C3Epc9T0eevlBB5YNK1ATN
CXjkXYHgifwMXImY3w+IGPK5rl15orwgpBITwgqDMr9V4C7dZ31ufCUWHtu5
sLyQjF/rbnSushIpp/1kK4gKnI/4tlKipxLLvGYzSoYrqPxRhek9x0VSp1Vi
33W2molyFc69uPzyzYJK2NRV6Q5qVlH5vRLbTCUWPdpbBV3bjnIzk0oqv1Th
3kfvzUonK7F88Xql6jtVcJX+sp1wqcTGW2rrXEOq0JT7LPHJw0rMHj0iJ59Q
hb4IsaKt7yup/FOF0OTRK+2J5LwU35t1uKcKI2PnM26VV2KK+o2lwmI05HhH
XZJuI+N9nMktQoPm1vO5QX8qqfxEw8Jtv27OnlmFMXJXdO2lIc5ZhHlXtQr1
lTSFe3Y0dFQ9Lh3QrkL7qoI1K7xoeOzWrbHbtIrKXzS07c1Ve3eqCuUivOUX
Emho2Lc4s9+tClGuy2bOqqLBKNwwZ1VAFRIYSkt+9NBwWJV38syHKiq/0dHZ
fcIxMKkKYZE75/9WpkOu0Ur2R3kVPBZ4iAZtoiNdcdbS4tYq+HpcnAczOqbd
21Nd+5uMZ51Z3WRHR/lmCw5TioaL5iGzPb3o2DSf9a5qEY3Kh3QYrOseziLf
8/DSQqncBDqK/VLjPprQcNYrdfG5KjoKVlnXuZ+gweAvb4pELx12ZJbfdZVG
5ctq3Jm3v1TqAQ2rypVFTFSqoXcy80XBGxq0V8jID26qRnh91ES3HzTMfWc4
FmBWDctvb8PmFdGofEp+nqRAxLFpEL56iaRa1QgdnJu4jUeDZPXZ6a6h1Zjh
1DCWK07H3HWHFyklVmNkw+mozYp0Kt9W49byS78/r6ZDWNxH6XhvNbzO7vwq
uZ0O4nqasPDkGgj3NVce309Hd12c3AeVGiwIEw6IdqBT+bgGCa/bEziedNCi
WbO6zGownL/nxpJndMQunj3iY1+D62aZ100+05Fya4rkirs1iJCMl7NPo1P5
ugauI6tJhk7HB6t1ky8k1uDJlm/p3u103C451z2TVgOLhMSSO3/o8Fc/MvFH
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
vQs=
          "]]}, {}}}, {}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwt13c41f0bB3ArkZDVJhFJKutJCW+jJU8ZSVLhkYeQSGQkWUXTeOyKBooW
SglJRUrDyMo8X/uc7zmHslX8Pl3X76/7el3XOd/x+dyf+76/K528rP7l4+Hh
EeXl4fkT+V/N+9Lz1z8GPP+P8gvlleX+A3aWZg7KkjjWEbvnW7w5RMpzbFtI
ZBh96H4W7wAZ980iT0hsPNn3ICveC5lK5XuSSKy9PCJxI/4smi5npDqQuDs1
qCIlPgZ1gSG9t+NicHlF2Y2k+Awoa11e9+pqBlgTgrNGJ/MgP/lzPNY9D5t+
x1k88S6CC1cr8C/rInzotI3gUyxHjZBm1Wa+chgaW//MdqqAjG/0+DX5Cth5
mw4XHngPMwWOmCGzCmUrVcPLsz7BonlLdTP3I6xTVO90HK+FvsNQet+HGiyb
89Ik1qUeVM9jz7+y6hClVVlQHt2ALXkiJ0OCv2Lbjl2O2eeboCS0IHSlUiMq
L4wqRwa1oL7X5fezwiawrkiXdqW0QiT49xzLfS34xz8/Zji+HTp2f9kxK7/h
jEKFxtnnnTC6LO69AG1YP3NmnM+NgSctLdG6qe2oOmw7Iu9MoTwi5IpFZQc0
0j2bz/h2A1Lqj3KGO7HV8rVdoU8Pctf8fdKR24W1feaVa8/3YtdGnd8CPgz4
LDihl57Qh8GZyFbtNgZYV6u9Y1L6EBF8/XlGOwNOoquyQq/3Qa+y4blwJwOW
85pFj2T2oWe55so2BgPqAvpdq5/2YbbfLeFkPwPcCaHw/K992FWu3hP0nQH3
rptVFZL9GJ9xsOkWpHDkUa0VHduPtJAjO8U2ULBfXBWukdiPzTcUGuzUKdiF
vyzwT+1HxLrPe7M1KFjY5EoK3O5HkJrNel1tCnozEfXLn/QjfoP13/s2U5De
o2O1p7Efnudm5x8woVDBuWGZv2QAnZmluYk2FF7tTwibkB2A+JkIr/L9FIpf
X8zXVxiAcUmdIsuWQl6iv0S16gDaJYLsdA9SuK5vWde9ZQCz8Vq/PjtQ8Lsi
YCltP4D6BPWR10cpKK/zsPC/PQC/EYPytkAK7NhOlm/2ACZUNuXXB1EoGLU8
55M7gIeLJvLen6agX7qp2LOAXJ9j255/hoK1meAq5zcD0A/L7woIoxDmdmvC
onsAKeEjod+iKbRnNaerKgyCqp/w7k2icFvYbLOK8iDa9ukLvkymcNSz7KuS
6iDMTenshBQKI9pZQis1B6F3aeE8ozQK8yp8fBYZDyJ+7TvrqzcobOoW3S7g
NAiH+uDe6TsU/pPbyum4NYgl9jobl+VRePaJ6V+VNYiLOdP/1BG3BsXw5ecM
YlQ3KuN8PgX55tZFkfmDuOR1zZxbQOFBzAlj1deDWPHX/LCCQgrveDKSTzEG
gVF+abESCtPdU0biK5gIz9XeK1FJQTYu49OkAhOh/s8v5BAbYtv+bmUmZPSF
awzfUYi6FnuscD0TF+eUnjtWRfbTenXyQQMmvDfU3iz6QGFdpTX77mEmqCPW
gYpfKDjefZxkeJ0JA66cpEkTBUGjH8vP3mRiuEXIuIr4Yav2nZeZTGyOzrPa
1UyeR7T4se5DJhSuVcrsbqGQ4FvxXruMicwdXSu2tVJ4b/RtWoXBhNbvAtXZ
DgrH25aFufYyoY5Z2xOdFGT87OdmDzKx8KuBSzex070eKcXvTBSdU5Z93UXh
lxhXTZaPhSvSoVPeFAX1dj4HiVUsTPxXtDetl0KT37Y+cxUWohJ5naeJz4hH
e1xVY8FGJ9jyQB+FamPRAJG/WFiumPxWqp+Cc86iuDnbWdj724739ADZTxO7
RVt3sbBeSWWyjji//fqN8D0spP1j+nH1IIUZcYXcWRsWNKeXCNYSp5xSezvl
yoL++x/VkiwKBgu8TDcdY+Ger8MtR+K+nPyaU94sfO/auvchsWbHxvaRABby
h+ebmtAUPpkYjXEukP+3pQT+w6bAI2Gzuvs+CwoCo00uXAonMmUWtzxmQVek
3DWduFunUejLExYe+++bbCCusLdmvShhwa/w3GIMUbjwwOph3EcWEvJvWM0d
JvsByfSoGhYMbtl0bSQ+9rXu6pmvLKxeoObxL/GeaQtvtzYWkgObzr4iltxp
rmVEs/DLti7N9TuFiDaxVTpDLIh/l5GLIR49/kV63QgLfI0fMwqJmxJ3jy/+
yYL20Y3ps8Q71ogOiM2yYHW9fKniDwpFpZ+aBfhpSCq7Jm4jvtZj9mJ4Hg3D
mKeRUcTz/UVy+8VorFLVmMomDpn3Ma1dkkZKnJ9HJbGjxq7g90tpIJrXdJZ4
1dmduKlKY4b61ucyQiFRUkg9aT2N3yE7t4cQC2ZXyV/WpBEj13wngXjw03a+
AF0aUXy8NmXEBxwFRzwNaNzM9smtI64eqew5Ykzj6fz8nz3ED5duqzTfRePe
GqOEOaMU5B4JPNu2hzyfv1ubNHGsUUX2FisaNU9EVigS8zZGJGvY0FDSk3JQ
J/Y5ahK92o5G2EmPa3rEPT/5AmXtachVzH7dQWwd88ZNyonG4owSISviSoVw
O2EXGt7BFzcfJN74zMhs1o2GYNt+lyPEd0159cY8aWQYise4Ey/uKFejT9Do
3nz9iTfxRe9QWcqPhoMd66sf8U9+Q7HmQBrn9PqGAomPJc/OfDpD43FYwNwz
xJ2qr4behJH718csPUtsXhbCKDpHY6B94ZpQ4nJLg7pHF2io2E5p/rFG3+/X
mVdo1PIobvrz+9sBLwvS4miUpZ3d9Od6UvPP3IlNpFE0PK0VRByZoZdwPpW8
T0Oo6iniMc1fkcE3yHrI/V52gtjlXYmfzy0aJx8dFPIgbjlw2uVoFo1i9+ih
P+9rytHdb59Do9DQq+7PehgcSzbJeUgjz0So05JYkx7ZMJpPIz0g+vl2YmV3
i+V4RkPEs+mwLvFS5gOhi8U0FhW11KoRix0VHmsoo+E37bdAjph/4F9qxVsa
rp0Jy8WI2b1yxYUfafA7/0hlkf1nHDmdzVNLQ/bizLxm4sbu5nizBhoFdqt3
viEuY8R6UO00cj3dlROJCxw4+9UoGnphVlXBxHc7Tbf695H8oX5oHSGObeeT
FeWS/E+c9FIjjjzoIGz7g8ZyQTWIEwe2lozdHqchw/P02zDJb6cW3y+bZsl6
aNt75xHb7K8rjuBn42jrnmNXiXc1rbv7ZS4bYl3qWh7EWg39Z50XsLFxm8vK
lcQqe02OPZZmo9Y+euc0OY/L6zNspxezEbdjs249sUCtrUbsSjbqHfuCQ/6c
34/V3SWabKytehH8npz/6l2rawR12DBdmzWWTPzqQ0SJ5RY2rMQObXIhvlel
lzBgwkaZ48els6TeBL19tE1qHxuRb0QsFYiPG4to2h9g4/2/j2QGSX068tpV
LucwG+J3Dt55QPz3K/kJAxc2TmmcWqJJLFsSf8/dnw3ZbPHj6zmk/ugOJRSe
ZmN+p3sAi9RDwRdmYTyhbGhvkjTLIuY+E7BLimZDorZ/5yLi8oJTIm9S2Qhf
Ip3JJvXVOdfu+JJSsl6e/BWHSH1+dpK5y6KcDbea6h5BYiH9gNVRFWx4hL5s
fEzq+4OaRMboJzYcH3/eMEP6wehorVVtBxtDhzcXXyb9IgI7dKJm2Qh6d0jm
RDeFBqEmqTJ+Dq5veLZbiFi53nl4dC4HItHdNumkH1U7h+c4LeBg+3qHtncM
8j4XXy4zWMmBn3NKrjDpX7cbtHjGjDmQW5VjbtNG7nfjTfvaHRyclt57qZX0
x+2uli+czDhQKApNOkzMmjruU7uXA7tL0sscv5H8X5Hbe9+Zg5jwzlYb0m/f
uMl/cDrPQTN3qaLIVwrUzPz42g8c7LgrZXqV9POZ14u/lX3mIJNprz/xnpyP
c6vkH9ZxoHMkWdmB2FpE79GFbxxUF8c2ryXzwLtFHtXGTA4KS+n8ogoKueof
+AqFuFimEqt78xUFX6dzJ1N3cJHu6rkh+ynJb6W44igzLgImDO9wnpD6OXid
95Q5F7SCzDxt4v7jT2Os9nORGh+R95LMN7ane+6LuHIxadZiX/GIzGsJRr1n
znPhruyrnXGP7Pe739ZOlVyYZYQfvniNQrZvdnLWBy6Cc2xTb5B5a7uieevg
Zy5c7POTHqdSOB9608GriYvQtXcaa8i8NmeLiXvwABeWmolOvAkk3/OizyYJ
D2Gbm26OymUKfGlSudW7h6BR8dkrisyLt3eWskWthjC4W6DYh8yTxhPOGyxt
hhAb9t/bQ2TeDLd+9rTZfghthoHS6/xJvRc/8KrXawjjFXH3y3xIv45Mb5iJ
G0LU14SbWW4UZj3XzGo2DSEkrUs7nMzD7gvNH6xrHQLnO/eo3T6SP2W+B1Q6
h5CR2BChYU3WV7z8iWz/EOakDXu2W5L9yLc5KjQ+BNZaMUml3cTTrwe584Zx
VEM0JozM2/f0hywrVIdheHHpXFcyz1tUmK7ych/Gj5SbjhQ/hacvx3ycjg2D
y0hTDuIj/eL5rdf7jg8jXyu1TYKX1LecKXs9n2G4TARKGsww4B2TkyocNIyZ
gMKCC5MMxNoJi2deGEYI1/8ph81A7fD7qZZ7w7ht/CpwsIF8j8jurDEeGEZq
duzcu7cYKO3v4RQe/46dUy/i0xQZOM2UO7SQ8x0yay3sdHS6cOfQhP7CUz/g
oSthOn+wA/LCXl784z9w4vNHvUUX2rGHV/3u8ZMj0IuLHTsg2oY+t6tWgT9H
4P8ytOWS6TfUilzefSJoFPusZWzOhjRDSW51qZDAGKb8VZICnRuhGiyiIXdp
DKFe/cv8135FpFTMmLzwOFRf9/NdGK3FjmV5697GjUNxU6NLyudPsD/kXWgl
MYHlbYXfL5VXQZkZaOJ4dQKeV+Z94Lv4Bvv75beJLpyEg2FN50f1F+hY7pp0
N2ESG26lx/kq3IeNkl5fe9Ikxg16mw4W5aJ2nYS2ZOok8nd4LNuwJxdvDErq
gm9MQuLkZE5qYA7uOYqLWmVPQm/jPqmzNXfhk/k84tfzSVzmLf942T8Tc9WE
Tli2TeLKfT7DiBPXEKrd8ep8xyTmHTTTPpCShmm9ArHSrkl0KN3KmvsqFezd
hx4o906ivSxHnCuSgnqvvIGf7Enohkz7UHcScP2JrX32zCSY94qlPqVcgkzp
uodtPFPgi3rqfYm6gKsVfL8W8E+R74XaXb/WRCOs8UHq6blTiNmclvzjRSTJ
C55GiwVTcDt0btL5wWkwZhsVz0tOwUlS2ub3pgAcELrvUyI9BSUVNa2pCl/8
vWTfAuUlU3jJs9he55kHKleqOhxcNoWjnS2dkdXOMFCdfRgrO4UfW+WqtUoO
okiz4VfliinMfKkwbX1pBo0tOWY/V05B6re962shD4P/AZ/IwCc=
         "]]}}}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.56923}, {0, 0.561096}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0, 1.56923}, {0, 0.561096}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Numerowa numerycznie (h = 0.0015)\""}, "PointLegend",
           DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"u(x) = xcosx\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.674050626242194*^9, 3.674050637397025*^9}, 
   3.6741327087762737`*^9, 3.6741338089483204`*^9, 3.674133995900062*^9, 
   3.674835942985674*^9, 3.674842233056365*^9, {3.6748435113706627`*^9, 
   3.6748435212759924`*^9}, 3.6748442026239634`*^9, 3.6748444638846784`*^9}]
}, Open  ]]
},
WindowSize->{1224, 686},
WindowMargins->{{Automatic, 30}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2436, 53, 172, "Input"],
Cell[2997, 75, 2186, 61, 314, "Input"],
Cell[CellGroupData[{
Cell[5208, 140, 1295, 33, 106, "Input"],
Cell[6506, 175, 301, 4, 31, "Output"],
Cell[6810, 181, 283, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7130, 190, 1245, 32, 106, "Input"],
Cell[8378, 224, 332, 5, 31, "Output"],
Cell[8713, 231, 320, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9070, 241, 655, 16, 86, "Input"],
Cell[9728, 259, 58915, 1024, 518, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68680, 1288, 1344, 29, 86, "Input"],
Cell[70027, 1319, 19012, 367, 532, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89076, 1691, 912, 24, 86, "Input"],
Cell[89991, 1717, 20638, 396, 512, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110666, 2118, 940, 24, 86, "Input"],
Cell[111609, 2144, 37051, 665, 545, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148697, 2814, 929, 23, 86, "Input"],
Cell[149629, 2839, 18564, 361, 538, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168230, 3205, 1418, 30, 86, "Input"],
Cell[169651, 3237, 20626, 396, 544, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190314, 3638, 906, 23, 86, "Input"],
Cell[191223, 3663, 37241, 668, 567, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
